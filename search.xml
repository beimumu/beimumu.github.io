<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/post/mysql-1/"/>
      <url>/post/mysql-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>1、查询所有学生的学号、姓名，要求按学号升序排列</p></blockquote><blockquote><p>2、将“060101”号学生的成绩按降序排列</p></blockquote><blockquote><p>3、查询课程名中不包含“数据”字样的课程信息</p></blockquote><blockquote><p>4、查询选修了100004号课程且成绩在80分以上的学生学号、姓名和成绩</p></blockquote><blockquote><p>5、查询选修课程“100002”的学生中成绩最高的学生的学号</p></blockquote><blockquote><p>5.1、查询课程号“4”的最高分和最低分</p></blockquote><blockquote><p>5.2、查询选修课程“100002”的学生中成绩最高的学生的学号、姓名和成绩</p></blockquote><blockquote><p>6、查询所有比王华年龄大的学生姓名、年龄和性别</p></blockquote><blockquote><p>7、查询学号为“16480101”学生的成绩，输出格式为：姓名、课程名、成绩</p></blockquote><blockquote><p>8、查询本班同学各科的平均成绩，输出格式为：学号、姓名、平均成绩，并按降序排列</p></blockquote><blockquote><p>9、插入一个记录学生记录（16480150，李明，男，21，电信系，16物联网工程1班）</p></blockquote><blockquote><p>10、将学号为“16480150”学生的年龄改为22</p></blockquote><blockquote><p>11、删除学号为“16480150”的学生信息</p></blockquote><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 1、查询所有学生的学号、姓名，要求按学号升序排列</span><span class="token comment">/*升序排列：where 所要求的 order by 字段 [asc升序 | desc降序] */</span><span class="token comment">-- 方法一</span><span class="token keyword">select</span> Sno<span class="token punctuation">,</span>Sname <span class="token keyword">from</span> Student<span class="token keyword">where</span> Sno <span class="token keyword">order</span> <span class="token keyword">by</span> Sno<span class="token punctuation">;</span><span class="token comment">-- 方法二</span><span class="token keyword">select</span> Sno<span class="token punctuation">,</span>Sname <span class="token keyword">from</span> Student <span class="token keyword">order</span> <span class="token keyword">by</span> Sno <span class="token keyword">asc</span><span class="token punctuation">;</span><span class="token comment">-- 2、将“060101”号学生的成绩按降序排列</span><span class="token keyword">select</span> Cno<span class="token punctuation">,</span>Grade <span class="token keyword">from</span> Sc<span class="token keyword">where</span> Sno<span class="token operator">=</span><span class="token string">'060101'</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> Grade <span class="token keyword">Desc</span><span class="token punctuation">;</span><span class="token comment">-- 3、查询课程名中不包含“数据”字样的课程信息</span><span class="token comment">-- 不包含 not like '字段'</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course<span class="token keyword">where</span> Cname <span class="token operator">not</span> <span class="token operator">like</span> <span class="token string">'%数据%'</span><span class="token comment">-- 4、查询选修了100004号课程且成绩在80分以上的学生学号、姓名和成绩</span><span class="token comment">/*Sname只有在Student表中有，Grade只有在SC表中有，其中将两个表连起来的是Sno。要得到Student表中的sno,就得通过sc表中的sno,所以Student.Sno=sc.Sno,即：select Student.Sname,Student.Sno,SC.Cno,SC.Grade from SC,Studentwhere Student.Sno = SC.Sno and sc.Cno = '100004' and sc.Grade >= '80';*/</span><span class="token keyword">select</span> Student<span class="token punctuation">.</span>Sname<span class="token punctuation">,</span>Student<span class="token punctuation">.</span>Sno<span class="token punctuation">,</span>SC<span class="token punctuation">.</span>Cno<span class="token punctuation">,</span>SC<span class="token punctuation">.</span>Grade <span class="token keyword">from</span> SC<span class="token punctuation">,</span>Student<span class="token keyword">where</span> Student<span class="token punctuation">.</span>Sno <span class="token operator">=</span> SC<span class="token punctuation">.</span>Sno <span class="token operator">and</span> sc<span class="token punctuation">.</span>Cno <span class="token operator">=</span> <span class="token string">'4'</span> <span class="token operator">and</span> sc<span class="token punctuation">.</span>Grade <span class="token operator">>=</span> <span class="token string">'80'</span><span class="token punctuation">;</span><span class="token comment">-- 5、查询选修课程“100002”的学生中成绩最高的学生的学号</span><span class="token comment">/*先查询Sno，在嵌套查询成绩最高列值的最大值: max()列值的最小值：min()即：select Sno from scwhere Grade=(select MAX(Grade) from sc where Cno = '100002' );*/</span><span class="token keyword">select</span> Sno <span class="token keyword">from</span> sc<span class="token keyword">where</span> Grade<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>Grade<span class="token punctuation">)</span> <span class="token keyword">from</span> sc <span class="token keyword">where</span> Cno <span class="token operator">=</span> <span class="token string">'4'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 查询选修课程“4”的学生中成绩最高的学生的学号</span><span class="token keyword">select</span> sno <span class="token keyword">from</span> SC<span class="token keyword">where</span> cno <span class="token operator">=</span> <span class="token number">4</span><span class="token keyword">order</span> <span class="token keyword">by</span> grade <span class="token keyword">desc</span><span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">-- 查询课程号“4”的最高分和最低分</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>Grade<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token string">'最高分'</span><span class="token punctuation">,</span> <span class="token function">min</span><span class="token punctuation">(</span>Grade<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token string">'最低分'</span> <span class="token keyword">from</span> sc<span class="token keyword">where</span> Cno <span class="token operator">=</span> <span class="token string">'4'</span><span class="token punctuation">;</span><span class="token comment">-- 查询选修课程“100002”的学生中成绩最高的学生的学号、姓名和成绩</span><span class="token keyword">select</span> student<span class="token punctuation">.</span>Sname<span class="token punctuation">,</span>sc<span class="token punctuation">.</span>Sno<span class="token punctuation">,</span>sc<span class="token punctuation">.</span>Grade <span class="token keyword">from</span> student<span class="token punctuation">,</span>sc<span class="token keyword">where</span> student<span class="token punctuation">.</span>Sno <span class="token operator">=</span> sc<span class="token punctuation">.</span>Sno <span class="token operator">and</span> Grade <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>Grade<span class="token punctuation">)</span> <span class="token keyword">from</span> sc <span class="token keyword">where</span> Cno <span class="token operator">=</span> <span class="token string">'4'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 6、查询所有比王华年龄大的学生姓名、年龄和性别</span><span class="token comment">/*子查询：先在student表中找王华的年龄，再在student表中找大于王华年龄的姓名...即：select Sname,Sage,Ssex from studentwhere  sage > (select sage from student where sname = '王华')*/</span><span class="token keyword">select</span> Sname<span class="token punctuation">,</span>Sage<span class="token punctuation">,</span>Ssex <span class="token keyword">from</span> student<span class="token keyword">where</span>  sage <span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">select</span> sage <span class="token keyword">from</span> student <span class="token keyword">where</span> sname <span class="token operator">=</span> <span class="token string">'钟文辉'</span><span class="token punctuation">)</span>  <span class="token comment">-- 查询选了“4”号课程的且成绩高于此课程平均成绩的学生的学号、该门课程成绩</span><span class="token comment">/*先查出此课程（课程号为4）的平均成绩select avg(grade) from scwhere cno = '4'再查出4号的学生学号和成绩，select sno,gradefrom scwhere cno = '4'*/</span><span class="token keyword">select</span> sno<span class="token punctuation">,</span>grade<span class="token keyword">from</span> sc<span class="token keyword">where</span> cno <span class="token operator">=</span> <span class="token string">'4'</span> <span class="token operator">and</span> grade <span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span><span class="token keyword">from</span> sc <span class="token keyword">where</span> cno <span class="token operator">=</span> <span class="token string">'4'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 7、查询学号为“16480101”学生的成绩，输出格式为：姓名、课程名、成绩</span><span class="token comment">/*在select中只需要输入你想查询的内容，不用输那么多；在条件中，你可以调用表中的任何字段。其中，三表相联student.Sno = sc.Sno and course.Cno = sc.Cno 相当于关联。*/</span><span class="token comment">-- 学生表和成绩表的姓名对应，课程表和成绩表的课程名没对应，会导致该学号下的同学课程名和成绩不匹配。</span><span class="token keyword">select</span> student<span class="token punctuation">.</span>Sname <span class="token keyword">as</span> <span class="token string">'姓名'</span><span class="token punctuation">,</span>course<span class="token punctuation">.</span>Cname <span class="token keyword">as</span> <span class="token string">'课程名'</span><span class="token punctuation">,</span>sc<span class="token punctuation">.</span>Grade <span class="token keyword">as</span> <span class="token string">'成绩'</span> <span class="token keyword">from</span> student<span class="token punctuation">,</span>course<span class="token punctuation">,</span>sc<span class="token keyword">where</span> student<span class="token punctuation">.</span>Sno <span class="token operator">=</span> sc<span class="token punctuation">.</span>Sno <span class="token operator">and</span> sc<span class="token punctuation">.</span>Sno <span class="token operator">=</span> <span class="token string">'060101'</span> <span class="token comment">-- 修改后：</span><span class="token comment">-- 方式一: 在查询语句里，表明调用导致代码冗余</span><span class="token keyword">select</span> student<span class="token punctuation">.</span>Sname <span class="token keyword">as</span> <span class="token string">'姓名'</span><span class="token punctuation">,</span>course<span class="token punctuation">.</span>Cname <span class="token keyword">as</span> <span class="token string">'课程名'</span><span class="token punctuation">,</span>sc<span class="token punctuation">.</span>Grade <span class="token keyword">as</span> <span class="token string">'成绩'</span> <span class="token keyword">from</span> student <span class="token punctuation">,</span>course <span class="token punctuation">,</span>sc<span class="token keyword">where</span> student<span class="token punctuation">.</span>Sno <span class="token operator">=</span> sc<span class="token punctuation">.</span>Sno <span class="token operator">and</span> course<span class="token punctuation">.</span>Cno <span class="token operator">=</span> sc<span class="token punctuation">.</span>Cno <span class="token operator">and</span> sc<span class="token punctuation">.</span>Sno <span class="token operator">=</span> <span class="token string">'060101'</span> <span class="token punctuation">;</span><span class="token comment">-- 方式二：方式一精简，取掉表用调用</span><span class="token keyword">select</span> Sname <span class="token keyword">as</span> <span class="token string">'姓名'</span><span class="token punctuation">,</span>Cname <span class="token keyword">as</span> <span class="token string">'课程名'</span><span class="token punctuation">,</span>Grade <span class="token keyword">as</span> <span class="token string">'成绩'</span> <span class="token keyword">from</span> student s<span class="token punctuation">,</span>course c<span class="token punctuation">,</span>sc<span class="token keyword">where</span> s<span class="token punctuation">.</span>Sno <span class="token operator">=</span> sc<span class="token punctuation">.</span>Sno <span class="token operator">and</span> c<span class="token punctuation">.</span>Cno <span class="token operator">=</span> sc<span class="token punctuation">.</span>Cno <span class="token operator">and</span> sc<span class="token punctuation">.</span>Sno <span class="token operator">=</span> <span class="token string">'060101'</span> <span class="token punctuation">;</span><span class="token comment">-- 方式三：join</span><span class="token keyword">select</span> Sname<span class="token punctuation">,</span>cname<span class="token punctuation">,</span>Grade<span class="token keyword">from</span> student s<span class="token keyword">inner</span> <span class="token keyword">join</span> sc<span class="token keyword">on</span> s<span class="token punctuation">.</span>sno <span class="token operator">=</span> sc<span class="token punctuation">.</span>Sno<span class="token keyword">inner</span> <span class="token keyword">join</span> course c<span class="token keyword">on</span> sc<span class="token punctuation">.</span>Cno <span class="token operator">=</span> c<span class="token punctuation">.</span>Cno<span class="token keyword">where</span> sc<span class="token punctuation">.</span>Sno <span class="token operator">=</span> <span class="token number">060101</span><span class="token punctuation">;</span><span class="token comment">-- 8、查询本班同学各科的平均成绩，输出格式为：学号、姓名、平均成绩，并按降序排列</span><span class="token comment">/*“每个”等字样，考虑group by子句语法：group by [分组依据]*/</span><span class="token keyword">select</span> s<span class="token punctuation">.</span>sno <span class="token keyword">as</span> <span class="token string">'学号'</span><span class="token punctuation">,</span>sname <span class="token keyword">as</span> <span class="token string">'姓名'</span><span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token string">'平均成绩'</span><span class="token keyword">from</span> student s<span class="token keyword">inner</span> <span class="token keyword">join</span> sc<span class="token keyword">on</span> s<span class="token punctuation">.</span>Sno <span class="token operator">=</span> sc<span class="token punctuation">.</span>Sno<span class="token keyword">group</span> <span class="token keyword">by</span> sc<span class="token punctuation">.</span>sno<span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token function">avg</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span> <span class="token keyword">desc</span><span class="token punctuation">;</span><span class="token comment">-- 9、插入一个记录学生记录（16480150，李明，男，21，电信系，16物联网工程1班）</span><span class="token comment">-- insert into student </span><span class="token comment">-- values('16480150','李明','男','21','电信系','16物联网工程1班')</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token punctuation">`</span>student<span class="token punctuation">`</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'070105'</span><span class="token punctuation">,</span><span class="token string">'张三'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1999-12-10'</span><span class="token punctuation">,</span><span class="token string">'22'</span><span class="token punctuation">,</span><span class="token string">'电信系'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token punctuation">`</span>student<span class="token punctuation">`</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'070110'</span><span class="token punctuation">,</span><span class="token string">'李四'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1998-12-10'</span><span class="token punctuation">,</span><span class="token string">'21'</span><span class="token punctuation">,</span><span class="token string">'信息院'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token punctuation">`</span>student<span class="token punctuation">`</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'070119'</span><span class="token punctuation">,</span><span class="token string">'王五'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1997-11-10'</span><span class="token punctuation">,</span><span class="token string">'22'</span><span class="token punctuation">,</span><span class="token string">'机电系'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 10、将学号为“16480150”学生的年龄改为23</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span><span class="token keyword">update</span> student <span class="token keyword">set</span> sage <span class="token operator">=</span> <span class="token string">'23'</span><span class="token keyword">where</span> sno <span class="token operator">=</span> <span class="token string">'070105'</span><span class="token punctuation">;</span><span class="token keyword">update</span> student <span class="token keyword">set</span> memo <span class="token operator">=</span> <span class="token string">'爱好打篮球'</span><span class="token keyword">where</span> sno <span class="token operator">=</span> <span class="token string">'070110'</span><span class="token punctuation">;</span><span class="token comment">-- 11、删除学号为“16480150”的学生信息</span><span class="token keyword">delete</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> sno <span class="token operator">=</span> <span class="token string">'070119'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL的安装</title>
      <link href="/post/mysql-de-an-zhuang/"/>
      <url>/post/mysql-de-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><ol><li>数据库（DB，DataBase）</li><li>概念：长期存放在计算机内，有组织，可共享的大量数据的集合，是一个数据“仓库”。</li><li>作用：保存，并能安全管理数据（如：增删改查），减少冗余等。</li></ol><h2 id="数据库的分类"><a href="#数据库的分类" class="headerlink" title="数据库的分类"></a>数据库的分类</h2><ul><li><p>关系型数据库：（SQL）</p><ul><li>MySQL，Oracle，SQL Sever，DB2，SQLite</li><li>通过表与表之间，行和列间的关系进行数据存储。</li></ul></li><li><p>非关系型数据库：（NoSQL ，not only AQL）</p><ul><li>Redis，MongDB，…</li><li>非关系型数据库，对象存储，通过对象的自身的属性来决定。</li></ul></li></ul><h2 id="数据库管理系统（DBMS）"><a href="#数据库管理系统（DBMS）" class="headerlink" title="数据库管理系统（DBMS）"></a>数据库管理系统（DBMS）</h2><ol><li>数据库管理软件 , 科学组织和存储数据 , 高效地获取和维护数据</li><li>MySQL：数据库管理系统</li></ol><h2 id="MySQL简介"><a href="#MySQL简介" class="headerlink" title="MySQL简介"></a>MySQL简介</h2><p><strong>概念 :</strong> 是现在<strong>流行</strong>的<strong>开源</strong>的,<strong>免费</strong>的 <strong>关系型</strong>数据库</p><p><strong>历史 :</strong> </p><ul><li>前世：瑞典MySQL AB 公司开发，</li><li>今生：属于 Oracle 旗下产品。</li></ul><p><strong>特点 :</strong></p><ul><li>免费 , 开源数据库</li><li>小巧 , 功能齐全</li><li>使用便捷</li><li>可运行于Windows或Linux操作系统</li><li>可适用于中小型甚至大型网站应用</li></ul><p><strong>官网 :</strong> <strong><a href="https://www.mysql.com/">https://www.mysql.com/</a></strong></p><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><blockquote><p>安装建议：使用压缩版，exe文件卸载时很麻烦</p><p>软件下载：<a href="https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.19-winx64.zip">https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.19-winx64.zip</a></p></blockquote><h3 id="安装步骤："><a href="#安装步骤：" class="headerlink" title="安装步骤："></a>安装步骤：</h3><ol><li><p>下载压缩包好后，并解压到自己要安装的目录下，本人解压位置：D:\MySQL\mysql</p></li><li><p>添加环境变量：我的电脑-&gt;属性-&gt;高级-&gt;环境变量</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">在path：添加MySQL下的bin目录的路径D:\MySQL\mysql\bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>编辑 my.ini 文件 ,注意替换路径位置</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">[mysqld]basedir&#x3D;D:\MySQL\mysql\datadir&#x3D;D:\MySQL\mysql\data\port&#x3D;3306skip-grant-tables #这是第一次跳过密码验证<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>启动管理员模式下的CMD，并将路径切换至mysql下的bin目录，然后输入<code>mysqld –install </code>(安装mysql)</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">管理员模式：切换目录cd D:\MySQL\mysql\bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/MySQL/image-20211115215855067.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211115215855067"></p></li><li><p>再输入 <code>mysqld --initialize-insecure --user=mysql </code>初始化数据文件,此时data文件会自动生成，<strong>切勿自己添加</strong>。</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/MySQL/image-20211115215915110.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211115215915110"></p></li></ol><ol start="6"><li><p>命令<code>net start mysql</code> 启动mysql ，静静等待提示启动成功。</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/MySQL/image-20211115215925831.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211115215925831"></p><p>此时，启动成功之后，可以在任务管理器上看到MySQL正在运行：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/MySQL/image-20211115215935099.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211115215935099"></p></li><li><p>命令 <code>mysql –u root –p</code>进入mysql管理界面（密码可为空）</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/MySQL/image-20211115215959978.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211115215959978"></p><p>此时，结尾光标变成mysql，说明已经进入到MySQL中。</p></li><li><p>进入界面后更改root密码</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">update mysql.user set authentication_string&#x3D;password(&#39;123456&#39;) where user&#x3D;&#39;root&#39; and Host &#x3D; &#39;localhost&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/MySQL/image-20211115220026662.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211115220026662"></p></li><li><p>刷新权限</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/MySQL/image-20211115220043585.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211115220043585"></p></li><li><p>修改 my.ini文件删除最后一句<code>skip-grant-tables</code></p></li><li><p>重启MySQL</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql"># 退出exit# 停止服务net stop mysql# 开始服务net start mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/MySQL/image-20211115220127005.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211115220127005"></p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/MySQL/image-20211115220142148.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211115220142148"></p><p>此时，在任务管理器中的MySQL就停止运行了</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/MySQL/image-20211115220149024.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211115220149024"></p><p>重新启动MySQL时，若出现无法启动成功时，</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/MySQL/image-20211115220206051.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211115220206051"></p><p>就需要查看my.ini文件中的datadir的路径是否与你自己配置的一致：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/MySQL/image-20211115220114655.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211115220114655"></p><p>更改之后，重新启动成功</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/MySQL/image-20211115220231088.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211115220231088"></p></li><li><p>连接上测试出现以下结果就安装好了</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/MySQL/image-20211115215703593.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211115215703593"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 软件安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的账户类系统</title>
      <link href="/post/jian-dan-de-zhang-hu-lei-xi-tong/"/>
      <url>/post/jian-dan-de-zhang-hu-lei-xi-tong/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>这篇是简单的账户类系统的练习，主要是熟悉面向对象的特性和Java的构造函数等逻辑思维，加深对Java语言的理解。</p><h2 id="二、内容需求"><a href="#二、内容需求" class="headerlink" title="二、内容需求"></a>二、内容需求</h2><ol><li>定义一个账户类，包含属性:账户编号，用户名，密码，余额。包含方法:登陆、查询余额、存钱、取钱。</li><li>只有登陆成功以后，才能执行后面的三种操作。</li><li>创建测试类，创建账户类的对象，测试登陆、查询余额，存取钱的操作。</li></ol><h2 id="三、思路"><a href="#三、思路" class="headerlink" title="三、思路"></a>三、思路</h2><h3 id="1、创建Account类"><a href="#1、创建Account类" class="headerlink" title="1、创建Account类"></a>1、创建Account类</h3><ol><li><p>定义私有属性：账户编号，用户名，密码，余额。</p></li><li><p>生成相应的构造方法。</p></li></ol><h3 id="2、创建Account-fun类"><a href="#2、创建Account-fun类" class="headerlink" title="2、创建Account_fun类"></a>2、创建Account_fun类</h3><ol><li><p>完成登陆</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">Account</span> account<span class="token punctuation">,</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> account<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"密码正确！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述第一种虽完成了需求但是代码有冗余，所以有了第二种</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">Account</span> account<span class="token punctuation">,</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">boolean</span> res <span class="token operator">=</span> account<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> account<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>我们声明一个布尔值类型的变量<code>res</code>当用户名和密码同时返回<code>true</code>时，<code>res</code>返回<code>true</code>,即有了最后简洁的代码。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">Account</span> account<span class="token punctuation">,</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> account<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> account<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>查询余额</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">checkBalance</span><span class="token punctuation">(</span><span class="token class-name">Account</span> account<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您的余额还有："</span><span class="token operator">+</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>存钱</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addBalance</span><span class="token punctuation">(</span><span class="token class-name">Account</span> account<span class="token punctuation">,</span><span class="token keyword">double</span> money<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    account<span class="token punctuation">.</span><span class="token function">setBalance</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//余额+存的钱数</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成功存入"</span><span class="token operator">+</span>money<span class="token operator">+</span><span class="token string">"元，您当前余额为："</span><span class="token operator">+</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>取钱</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveBalance</span><span class="token punctuation">(</span><span class="token class-name">Account</span> account<span class="token punctuation">,</span><span class="token keyword">double</span> money<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//判断余额和取款金额</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> money<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您没有那么多钱！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        account<span class="token punctuation">.</span><span class="token function">setBalance</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//余额-取的钱数</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成功取走"</span><span class="token operator">+</span>money<span class="token operator">+</span><span class="token string">"元，您当前余额为："</span><span class="token operator">+</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="3、创建TestAccount类"><a href="#3、创建TestAccount类" class="headerlink" title="3、创建TestAccount类"></a>3、创建TestAccount类</h3><ol><li><p>第一步，完成基础的交互和系统菜单板块。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登陆成功，亲爱的"</span><span class="token operator">+</span>account<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"用户。您好，欢迎使用本系统！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=========系统菜单========="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"0---------------------退出"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"1---------------------查询余额"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"2---------------------存钱"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"3---------------------取钱"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>         <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>            account_fun<span class="token punctuation">.</span><span class="token function">checkBalance</span><span class="token punctuation">(</span>account<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入要存入的金额："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            account_fun<span class="token punctuation">.</span><span class="token function">addBalance</span><span class="token punctuation">(</span>account<span class="token punctuation">,</span>input<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您当前账户余额为："</span><span class="token operator">+</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"元，请输入要取走的金额："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            account_fun<span class="token punctuation">.</span><span class="token function">saveBalance</span><span class="token punctuation">(</span>account<span class="token punctuation">,</span>input<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"欢迎下次使用！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span> <span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您的输入有误，请重新输入！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>第二步，只有登录成功后，才能进行查询余额，存取钱的操作。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>account_fun<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>account<span class="token punctuation">,</span>userName<span class="token punctuation">,</span>pwd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//第一步 </span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>第三步，考虑用户名和密码输入错误时的情况，我们添加一个结束循环的条件，当用户输入错误三次时，结束使用。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>num<span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>account_fun<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>account<span class="token punctuation">,</span>userName<span class="token punctuation">,</span>pwd<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">//第一步 </span>    <span class="token punctuation">&#125;</span>    num<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"错误次数过多，请稍后再试！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span>    <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您输入的用户名或密码不正确，还有"</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">-</span>num<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"次机会，请重新输入!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="四、代码实现"><a href="#四、代码实现" class="headerlink" title="四、代码实现"></a>四、代码实现</h2><h3 id="1、创建Account类-1"><a href="#1、创建Account类-1" class="headerlink" title="1、创建Account类"></a>1、创建Account类</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Account</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> account_num<span class="token punctuation">;</span> <span class="token comment">//账户编号</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span> <span class="token comment">//用户名</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span> <span class="token comment">//密码</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> balance<span class="token punctuation">;</span> <span class="token comment">//余额</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token keyword">int</span> account_num<span class="token punctuation">,</span> <span class="token class-name">String</span> userName<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">,</span> <span class="token keyword">double</span> balance<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>account_num <span class="token operator">=</span> account_num<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userName <span class="token operator">=</span> userName<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAccount_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> account_num<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAccount_num</span><span class="token punctuation">(</span><span class="token keyword">int</span> account_num<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>account_num <span class="token operator">=</span> account_num<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> userName<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserName</span><span class="token punctuation">(</span><span class="token class-name">String</span> userName<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>userName <span class="token operator">=</span> userName<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> password<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBalance</span><span class="token punctuation">(</span><span class="token keyword">double</span> balance<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> balance<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"Account&#123;"</span> <span class="token operator">+</span>                <span class="token string">"account_num="</span> <span class="token operator">+</span> account_num <span class="token operator">+</span>                <span class="token string">", userName='"</span> <span class="token operator">+</span> userName <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", password='"</span> <span class="token operator">+</span> password <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", balance="</span> <span class="token operator">+</span> balance <span class="token operator">+</span>                <span class="token string">'&#125;'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、创建Account-fun类-1"><a href="#2、创建Account-fun类-1" class="headerlink" title="2、创建Account_fun类"></a>2、创建Account_fun类</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Account_fun</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//登录</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">Account</span> account<span class="token punctuation">,</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//-------------------第一种--------------------------------------------------</span>        <span class="token comment">//用户名和密码正确后</span>        <span class="token comment">/*if (account.getUserName().equals(name) &amp;&amp; account.getPassword().equals(password))&#123;            System.out.println("密码正确！");            return true;        &#125;else &#123;            return false;        &#125;*/</span><span class="token comment">//-------------------第二种--------------------------------------------------</span>        <span class="token comment">/*boolean res = account.getUserName().equals(name) &amp;&amp; account.getPassword().equals(password);        System.out.println(res);*/</span><span class="token comment">//-------------------第三种--------------------------------------------------</span>        <span class="token keyword">return</span> account<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> account<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//查询余额</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">checkBalance</span><span class="token punctuation">(</span><span class="token class-name">Account</span> account<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您的余额还有："</span><span class="token operator">+</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//存钱</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addBalance</span><span class="token punctuation">(</span><span class="token class-name">Account</span> account<span class="token punctuation">,</span><span class="token keyword">double</span> money<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        account<span class="token punctuation">.</span><span class="token function">setBalance</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//余额+存的钱数</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成功存入"</span><span class="token operator">+</span>money<span class="token operator">+</span><span class="token string">"元，您当前余额为："</span><span class="token operator">+</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//取钱</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveBalance</span><span class="token punctuation">(</span><span class="token class-name">Account</span> account<span class="token punctuation">,</span><span class="token keyword">double</span> money<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//判断余额和取款金额</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> money<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您没有那么多钱！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            account<span class="token punctuation">.</span><span class="token function">setBalance</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//余额-取的钱数</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成功取走"</span><span class="token operator">+</span>money<span class="token operator">+</span><span class="token string">"元，您当前余额为："</span><span class="token operator">+</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、创建TestAccount类-1"><a href="#3、创建TestAccount类-1" class="headerlink" title="3、创建TestAccount类"></a>3、创建TestAccount类</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestAccount</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Account</span> account <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span><span class="token string">"test"</span><span class="token punctuation">,</span><span class="token string">"1234"</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Account_fun</span> account_fun <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Account_fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//定义循环结束的条件</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> userName <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> pwd <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//用户名和密码正确，进入if语句</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>account_fun<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>account<span class="token punctuation">,</span>userName<span class="token punctuation">,</span>pwd<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登陆成功，亲爱的"</span><span class="token operator">+</span>account<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"用户。您好，欢迎使用本系统！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                <span class="token punctuation">&#123;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=========系统菜单========="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"0---------------------退出"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"1---------------------查询余额"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"2---------------------存钱"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"3---------------------取钱"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#123;</span>                        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                            account_fun<span class="token punctuation">.</span><span class="token function">checkBalance</span><span class="token punctuation">(</span>account<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入要存入的金额："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            account_fun<span class="token punctuation">.</span><span class="token function">addBalance</span><span class="token punctuation">(</span>account<span class="token punctuation">,</span>input<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您当前账户余额为："</span><span class="token operator">+</span>account<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"元，请输入要取走的金额："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            account_fun<span class="token punctuation">.</span><span class="token function">saveBalance</span><span class="token punctuation">(</span>account<span class="token punctuation">,</span>input<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"欢迎下次使用！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span> <span class="token punctuation">;</span>                        <span class="token keyword">default</span><span class="token operator">:</span>                            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您的输入有误，请重新输入！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            num<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"错误次数过多，请稍后再试！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您输入的用户名或密码不正确，还有"</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">-</span>num<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"次机会，请重新输入!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、效果展示"><a href="#五、效果展示" class="headerlink" title="五、效果展示"></a>五、效果展示</h2><ol><li><p>登陆成功</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211009193437779.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009193437779"></p></li><li><p>查询余额</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211009193556925.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009193556925"></p></li><li><p>存钱</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211009193714519.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009193714519"></p></li><li><p>取钱</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211009193740611.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009193740611"></p></li><li><p>退出系统</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211009193823982.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009193823982"></p></li><li><p>密码输入三次错误</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211009193959435.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009193959435"></p></li></ol><h2 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h2><p>在练习过程中，再次体会到代码逻辑的奥妙，也同时明白逻辑这个东西必须细细品，慢慢品。也体会到多层逻辑嵌套所带来的效果是与众不同的。</p><hr><p>2022.01.19 时隔多月，再次复习一遍代码，理解了</p><ol><li><code>boolean</code>的登录逻辑</li><li>交互的相关逻辑</li><li>在<code>switch()</code>语句中<code>break</code>和<code>While(true)</code>永真的含义</li><li>跳出循环的插眼传送语句</li><li><code>System.exit();</code>退出语句</li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 练习 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学车心得感悟</title>
      <link href="/post/xue-che-xin-de-gan-wu/"/>
      <url>/post/xue-che-xin-de-gan-wu/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天很高兴，终于那到了驾照。这一年里太多辛酸泪啊，还好有老爸老妈鼓励支持。学车这一年真心觉得“学车容易，开车难。”<span class='pbg '>开车=心态+努力</span>，因为安全为主嘛！咱是一个惜命的人。</p><h2 id="科一、科四"><a href="#科一、科四" class="headerlink" title="科一、科四"></a>科一、科四</h2><p>就是<strong>刷题</strong>，技巧也有。网上一大堆。我就感觉啊出题的人有大病。有些问题是真脑瘫，但是有次刷到小学一年级的一道语文题，我就顿悟了，天哪，我是真悟了。不是出题人有问题，而是咱们想得太多。而出题人的想法就很单纯，一是一，二是二，没有考虑那么多的特殊情况。你试想你小学的时候哪来那么多心思，肯定考虑很单一。所以我就觉得这出题人肯定考虑到社会各个阶级的人，所以出的题目的性很明确，没那多其他可能。但是这也暴露出一个问题“理论与实践的矛盾了”。</p><p>为什么这么说呢？开车最终还是以实践，实际路况为主嘛。所以再刷题时就的考虑单纯点。当然理论是不能忽视的，理论和实践是相辅相成的，实践也是在以理论为基础的。现实中的有些“马路杀手”是真的不能容忍。咱们这个社会还是存在一些制度的不完善。什么包过，什么不负责任的行为数不胜数…这就是一个人责任心的体现。在刷题过程中有好多脑瘫题我就不展示了。</p><h2 id="科二、科三"><a href="#科二、科三" class="headerlink" title="科二、科三"></a>科二、科三</h2><p>在来练车的过程，不免被教练影响，这里就有一个“心态”问题。一定要放宽心，认真练车。什么时候打满、打半圈、回半圈。什么时候打快点，什么时候打慢点。这些都是自己慢慢体会的。<span class='pbg '>注:下面经验之谈都是以我们当地为主。但是大方向还是不变。</span></p><h3 id="科二"><a href="#科二" class="headerlink" title="科二"></a>科二</h3><p>在这里你需要知道<span class='pbg '>“领边线30公分”</span>，<span class='pbg '>“雨刮器制高点”</span>。这两个都是找车身与白色禁止线的距离，30公分左右为佳。边线领好，你的倒库，侧方位，直角转弯，半坡起步都已经成功30%左右了。剩下就是你的练习和心态。</p><ol><li><p>倒车入库:<br>右倒库：大于三十不管，小于三十往左回（右后轮与库角越来越窄，回半圈。若还窄，继续回），保证后门把手进入库角并不压角（方向盘右打满），再看左后视镜，看见最里边库角立马回正。再看车身是否平行（看车身是否倾斜，左斜右打，右斜左打），然后直接入库。<br>左倒库：在左后视镜看见后轮不压库角，再看右后视镜，再找库角，找见库角一把回正。</p></li><li><p>侧方位停车：<br>左侧雨刮器贴右边线走（同时也可以看右后视镜），当前面的库角出现在右后视镜中间停车。倒车时，看右后视镜，当库角消失在右后视镜时，方向盘往右打满，再看左后视镜出现最里面的库角时，方向盘一把回正。再看左后轮快压到虚线时，方向盘一把往左打满，确保后轮入库还有20公分以上。看右后视镜与线平行停车。方向盘保持不动，打左灯3s以上，当玻璃右下角，实线，眼睛三点一线，方向盘一把回正，再往右边打一圈。（两圈半）当边线宽，方向盘提前打。出库，镜子回正，数上两秒，回一圈，与箭头回正。</p></li><li><p>曲线行驶：</p><p>这个完全是看感觉，这个跟你的车速还有方向盘打的快慢早晚密切相关。所以说看感觉，当时驾校说的点位在考试过程中完全忘了就跟着感觉走了。</p><p>现在说一下点位技巧：方向盘先打九十度，左雨刷器与外线重合打一圈。走到中间回正，左雨刷器与沿子外侧重合。出线后回正。之后慢慢调整角度。</p></li><li><p>直线行驶：</p><p>也没啥说的，还是看感觉，但硬要说技巧就是开慢点，提前领好边线，拐角与人平行就一把向左打死。</p></li><li><p>半坡起步：</p><p>身子过第一条线向右打满，进线回半圈，打左灯回正，方向盘过线外侧，左打满平行后回正，人过半坡线左打死，松离合回半圈车身平，盯着左侧雨刷器与外线相接。方向盘，雨刷器，杆子三点一线，离合踩死拉手刹。方向盘左打六十度，踩半联动1-2之间，右脚踩油门到底。踩住不动，放手刹。离合不动，踩刹车与最外侧柱子打一圈，松离合。</p></li></ol><h3 id="科三"><a href="#科三" class="headerlink" title="科三"></a>科三</h3><p>科三一定忘记科二的一些陋习，比如长时间脚放在离合上，猛打方向盘…等等。在科三实际路况中，都是以实际来打方向盘。所以一定要注意。</p><p>在考试中，一定<span class='pbg '>胆大心细</span>，别怕打喇叭。有些情况安全员会替你做出反应，但是安全员一旦做出反应那你离挂科就不远了。所以提前打喇叭，一方面提示其他车辆，你在考试，可以适当的让让。另一方面就是提示安全员，让他知道前面的路况你已知晓，并且你能做出相应的反应。</p><p>我们是三条线，所以每一条线我都做了总结。不过是纸上写的。就直接放照片吧。</p><ol><li>一号、二号线</li></ol><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/daily/%E4%B8%80%E4%BA%8C%E5%8F%B7%E7%BA%BF.jpg" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="IMG_20210927_211547"></p><ol start="2"><li><p>三号线</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/daily/%E4%B8%89%E5%8F%B7%E7%BA%BF.jpg" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="IMG_20210927_211633"></p></li></ol><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><blockquote><ol><li>转向灯打了之后不要动方向盘</li><li>回到自己的道路记得关闭转向灯</li><li>路口，人行道轻点长压刹车</li><li>起步一定用一挡</li><li>轻扶方向盘</li><li>半联动，刹车迅速抬起，离合松慢点</li><li>灯光远灯回远近需灯一秒</li><li>左转靠近红绿灯，转大圈</li><li>打转向灯思考几秒在打</li><li>起步打左灯等几秒</li><li>检查灯光</li><li>车子注意熄火</li><li>开路中间</li></ol></blockquote><h2 id="写在最后的话"><a href="#写在最后的话" class="headerlink" title="写在最后的话"></a>写在最后的话</h2><span class='pbg '>开车=心态+努力+胆大心细</span>。练车真是一个磨练人的事情，很有趣。磨练了自己的心性，以及一些做人的道理。人生嘛那有什么一帆风顺，不都是大起大落？练车如此，以后的路亦是如此。人一定要**“稳”**。我的练车期间的感悟就写到此，也算是回顾下来练车的过程。]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随记 </tag>
            
            <tag> 经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>七月随记</title>
      <link href="/post/qi-yue-sui-ji/"/>
      <url>/post/qi-yue-sui-ji/</url>
      
        <content type="html"><![CDATA[<blockquote><p>“宝剑锋从磨砺出，梅花香自苦寒来”</p><p>​                                                               ——“拼搏”</p></blockquote><p>时间匆匆，转眼间已经七月中旬了，上次随记时还在三月。短短几个月有了新的感受、体会、见解、收获以及成长。这两天天气很热，心情也比较烦躁，还好今晚终于下了雨，也不知是哪个渣男又在发誓。今晚心也静了下来，也有点心里话就写下这次随记。</p><p>很遗憾的就是假期不能考科三，氧化钙！！！因为考试中心停考导致我不能考。还想着拿到本本子，就舒服了，结果天公不作美。</p><p>这个假期还想学很多，比如把上学期落下的数据结构补上，Java得跟上，Linux可以试着学习了解下。</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/daily/niuniu.jpg" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="niuniu"></p><p>今晚，心血来潮，就把图床重新布置了下，布置过程中又重温上手了一遍Git命令。</p><ul><li>首先，先从远端仓库克隆到本地</li><li>然后，再讲图片该移动的移动，该修改的修改，该删除的删除。</li><li>期间，又解决了gif动图的显示。 顺便推荐一个上传gif网站：<a href="https://giphy.com/">https://giphy.com</a></li><li>最后，再上传到远端仓库</li></ul><p>总结：今晚收获颇多，心情也不错。一看时间，算了，洗洗睡吧！<br>2021.07.16 03:33凌晨记</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>万年历</title>
      <link href="/post/wan-nian-li/"/>
      <url>/post/wan-nian-li/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在学习Java过程中，万年历是一道必不可少的练习题。它可以进一步加深我们对Java语言的理解和掌握。这篇我就先讲一下练习万年历的过程中一些思路。</p><h2 id="内容要求"><a href="#内容要求" class="headerlink" title="内容要求"></a>内容要求</h2><ol><li>能够显示实现1900年以后包括1900年的日期</li><li>能够判断所输入的年份是否为闰年</li></ol><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li><p>记录时间都是从==1900年1月1日==开始，因为这天正好也是==星期一==。</p></li><li><p>闰年的概念：</p><ul><li><p>普通闰年</p><p>能被4整除，但不能被100整除。</p><p><code>(year%4 == 0)&amp;&amp;(year%100 != 0)</code></p></li><li><p>世纪闰年</p><p>能被400整除。</p><p><code>(year%400 == 0)</code></p></li></ul></li><li><p>遍历出从1900年到输入年份i的总天数</p><ul><li>平年365天</li><li>闰年366天</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">4</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> i<span class="token operator">%</span><span class="token number">100</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">400</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    totalDays <span class="token operator">+=</span> <span class="token number">366</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    totalDays <span class="token operator">+=</span> <span class="token number">365</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>循环累计月份i的天数</p><ul><li><p>for循环遍历月份</p></li><li><p>switch语句确定月份i的天数</p></li><li><p>二月分闰月和平月</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>isRunNian<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    days <span class="token operator">=</span> <span class="token number">29</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    days <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>将具体的时间遍历出来，遍历之前需要考虑星期前的空格</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> beforeDays<span class="token punctuation">;</span><span class="token comment">//日期前面的\t</span>beforeDays <span class="token operator">=</span> totalDays <span class="token operator">%</span> <span class="token number">7</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>beforeDays <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    beforeDays <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//前面无空格，即为星期天</span><span class="token punctuation">&#125;</span><span class="token comment">//打印日期</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> days<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//满七个换行</span>    <span class="token comment">//日期前的\t+遍历到的日期=7，就换行</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>beforeDays<span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>==注：==加1的原因是我们是从星期天排列开始的</p></li><li><p>接着遍历空格并打印出来</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//遍历时间，先打印日期前面的\t</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> beforeDays<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>打印日期</p></li><li><p>因为一周七天，所以7为换行要求。==日期前的\t+遍历到的日期=7==</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> days<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//满七个换行</span>    <span class="token comment">//日期前的\t+遍历到的日期=7，就换行</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>beforeDays<span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WanNianLi</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> year<span class="token punctuation">;</span><span class="token comment">//定义年份</span>        <span class="token keyword">int</span> month<span class="token punctuation">;</span><span class="token comment">//定义月份</span>        <span class="token keyword">boolean</span> isRunNian<span class="token punctuation">;</span><span class="token comment">//判断是否为闰年</span>        <span class="token keyword">int</span> days <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//月份的天数</span>        <span class="token keyword">int</span> totalDays <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//从1900年到输入年份的总天数</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"************************万年历************************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入年份："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        year <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入月份："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        month <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//判断是否为闰年</span>        <span class="token comment">//闰年：普通闰年（能被4整除,但不能被100整除）、世纪闰年（能被400整除）</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>year<span class="token operator">%</span><span class="token number">4</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> year<span class="token operator">%</span><span class="token number">100</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span>year<span class="token operator">%</span><span class="token number">400</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            isRunNian <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>year<span class="token operator">+</span><span class="token string">"年是闰年"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            isRunNian <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>year<span class="token operator">+</span><span class="token string">"年不是闰年"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//遍历出从1900年到输入年份的总天数</span>        <span class="token comment">//平年365天，闰年366天</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1900</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> year<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//判断年份i是否为闰年</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">4</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> i<span class="token operator">%</span><span class="token number">100</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">400</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//闰年366天</span>                totalDays <span class="token operator">+=</span> <span class="token number">366</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token comment">//平年365天</span>                totalDays <span class="token operator">+=</span> <span class="token number">365</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//循环累计月份的天数</span>        <span class="token comment">// 遍历月份i的天数</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> month<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//判断月份i的天数</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>                <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>                <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>                <span class="token keyword">case</span> <span class="token number">10</span><span class="token operator">:</span>                <span class="token keyword">case</span> <span class="token number">12</span><span class="token operator">:</span>                    days <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                    <span class="token comment">//二月分闰月和平月</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>isRunNian<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        days <span class="token operator">=</span> <span class="token number">29</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                        days <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>                <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>                <span class="token keyword">case</span> <span class="token number">11</span><span class="token operator">:</span>                    days <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">default</span><span class="token operator">:</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输入信息有误！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">//将switch判断出月份的天数加到总天数里</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> month<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                totalDays <span class="token operator">+=</span> days<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"日\t一\t二\t三\t四\t五\t六"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//将具体的时间遍历出来</span>        <span class="token comment">//遍历之前先求出\t</span>        <span class="token keyword">int</span> beforeDays<span class="token punctuation">;</span><span class="token comment">//日期前面的\t</span>        beforeDays <span class="token operator">=</span> totalDays <span class="token operator">%</span> <span class="token number">7</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>beforeDays <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            beforeDays <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//前面无空格，即为星期天</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//遍历时间，先打印日期前面的\t</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> beforeDays<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//打印日期</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> days<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//满七个换行</span>            <span class="token comment">//日期前的\t+遍历到的日期=7，就换行</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>beforeDays<span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">7</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/wannianli.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210625214235708"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在学习过程中遇见一些想不通的地方，比如打印日期中的一些算法还没理解透彻。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 练习 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java复习总结</title>
      <link href="/post/java-fu-xi-zong-jie/"/>
      <url>/post/java-fu-xi-zong-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h2><ol><li><p>Path和ClassPath的作用</p><table><thead><tr><th></th><th>Path和ClassPath的作用</th></tr></thead><tbody><tr><td>path</td><td>配置windows可执行文件的搜索路径，即找到扩展名为.exe的程序文件所在目录，用于指定DOS窗口命令的路径</td></tr><tr><td>classpath</td><td>配置class文件所在的目录，用于指定类搜索路径，JVM就是通过它来寻找该类的.class文件</td></tr></tbody></table></li></ol><ol start="2"><li><p>实例变量和类变量的区别</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/Java%E7%9A%84%E7%B1%BB.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="Java%"></p><p>实例变量：在类和main方法之间，从属于对象，如果不进行初始化，则会使用该类型的默认值。</p><p>类变量：使用关键字static进行修饰的变量。</p><table><thead><tr><th align="center">类变量</th><th align="center">实例变量</th></tr></thead><tbody><tr><td align="center">使用关键字==static==进行修饰</td><td align="center">不使用关键字static修饰</td></tr><tr><td align="center">创建对象时，系统仅为类变量分配了一个存储单元，即==所有对象共用一个类变量==。当某个对象修改了类变量的值后，所有对象都将使用修改后的类变量的值。</td><td align="center">创建对象时，系统会给每个对象分配一个存储空间，即==每个对象都有各自的实例变量，且每个对象的实例变量的值也不相同==</td></tr><tr><td align="center">从属于类，既可以通过类名访问也可以通过对象名访问（公共的）</td><td align="center">从属于对象，且只能通过对象引用（私有的）</td></tr></tbody></table></li><li><p>Java的基本访问权限</p><table><thead><tr><th align="center">类型</th><th align="center">类的内部</th><th align="center">同一个包下其他类</th><th align="center">不同的包下的子类中</th><th align="center">不同的包下的非子类中</th></tr></thead><tbody><tr><td align="center">public</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">√</td></tr><tr><td align="center">protected</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center"></td></tr><tr><td align="center">friendly</td><td align="center">√</td><td align="center">√</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">ptivate</td><td align="center">√</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table></li><li><p>方法重载和重写的区别</p><table><thead><tr><th align="center">重载</th><th align="center">重写</th></tr></thead><tbody><tr><td align="center">在一个类中，多个方法具有相同的方法名，但具有不同的参数表（参数个数不同、参数类型不同以及参数顺序不同）</td><td align="center">1.子类对父类的允许访问的方法的实现过程进行重新编写；2.子类中定义的方法与父类方法具有相同的方法名和参数表以及返回值类型，但不具有相同的方法体；3.访问权限不能比父类中被重写的方法的访问权限更低。</td></tr><tr><td align="center">重载是一个类的多态性表现</td><td align="center">重写是父类与子类之间一种多态性表现，</td></tr></tbody></table></li><li><p>关键字final的用法</p><ol><li>final修饰的类不能被继承。</li><li>final修饰的成员方法不能被覆盖。</li><li>final修饰的成员变量，即为常量，不能被修改。</li><li>final修饰方法内的参数，这个参数在整个运行的环境中值不能被改变。</li></ol></li><li><p>关键字this和super的用法和区别</p><table><thead><tr><th align="center"></th><th align="center">super</th><th align="center">this</th></tr></thead><tbody><tr><td align="center">用法</td><td align="center">1.引用父类成员变量（super.成员变量名）</td><td align="center">1.访问当前对象的成员变量（this.成员变量名）</td></tr><tr><td align="center"></td><td align="center">2.调用父类成员方法（super.成员方法名(参数表)）</td><td align="center">2.调用成员方法（this.成员方法名(参数表)）</td></tr><tr><td align="center"></td><td align="center">3.调用父类构造方法（super(参数表)）</td><td align="center">3.调用构造方法（this(参数表)）</td></tr><tr><td align="center">区别</td><td align="center">引用父类中的成员</td><td align="center">引用子类中的成员</td></tr></tbody></table></li><li><p>接口和抽象类异同点</p><p>抽象类：</p><ol><li>关键字==abstract==</li><li>抽象类中可以有抽象方法也可以没有，但类体中包含抽象方法的类一定是抽象类。</li></ol><p>接口：</p><ol><li>关键字==interface==</li><li>接口是一组==常量==和==抽象方法==的集合。</li><li>接口只声明抽象方法头，不给出方法体。</li><li>由实现接口的类（实现类，关键字==implements==）去实现所声明的抽象方法</li><li>接口实现的技术称为==接口回调==，即==接口声明，实现类实例化==。</li></ol><table><thead><tr><th align="center">相同点</th><th align="center">不同点</th></tr></thead><tbody><tr><td align="center">1.都包含抽象方法</td><td align="center">1.单继承，多接口</td></tr><tr><td align="center">2.都不能被实例化</td><td align="center">2.抽象类及其成员变量具有与普通类一样的访问权限；接口的访问权限有public和默认权限，但接口中成员的访问权限都是public。</td></tr><tr><td align="center">3.都是引用数据类型</td><td align="center">3.抽象类可以声明成员变量，成员变量的值可以被更改；接口中只能声明常量</td></tr><tr><td align="center"></td><td align="center">4.抽象类中可以声明抽象方法、普通成员方法及构造方法；接口只能声明抽象方法</td></tr></tbody></table></li><li><p>JDBC连接数据库的过程</p><ol><li>加载驱动</li><li>获取连接</li><li>创建语句对象</li><li>执行语句</li><li>释放资源</li></ol></li><li><p>ArrayList（数组链表）和LinkedList（双向链表）的区别</p><table><thead><tr><th align="center">ArrayList</th><th align="center">LinkedList</th></tr></thead><tbody><tr><td align="center">易于遍历友好，插入、删除不友好</td><td align="center">易于插入、删除友好，遍历不友好</td></tr></tbody></table><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="%E9"></p></li></ol><h2 id="程序题"><a href="#程序题" class="headerlink" title="程序题"></a>程序题</h2><ol><li><p>冒泡排序</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">455</span><span class="token punctuation">,</span><span class="token number">257</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">int</span> temp<span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>                    flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>方法的重载</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Area</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">area</span><span class="token punctuation">(</span><span class="token keyword">double</span> r<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token number">3.14</span><span class="token operator">*</span>r<span class="token operator">*</span>r<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">area</span><span class="token punctuation">(</span><span class="token keyword">double</span> a<span class="token punctuation">,</span><span class="token keyword">double</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> a<span class="token operator">*</span>b<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>piblic <span class="token keyword">class</span> <span class="token class-name">Demo02</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Area</span> a1<span class="token punctuation">,</span>a2<span class="token punctuation">;</span>        a1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Area</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Area</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"圆的面积："</span><span class="token operator">+</span>a1<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"矩形的面积"</span><span class="token operator">+</span>a2<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>文件的复制</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo03</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">File</span> f1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"E:\\321.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">File</span> f2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"E:\\123.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>f2<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                f2<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">FileInputStream</span> input <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">FileOutputStream</span> output <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>f1<span class="token punctuation">)</span><span class="token punctuation">;</span>            output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>f2<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> len<span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span><span class="token punctuation">&#123;</span>            <span class="token keyword">try</span><span class="token punctuation">&#123;</span>                input<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                output<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“i++、i--、++i、--i”等自增自减运算的区别及练习</title>
      <link href="/post/i-i-i-i-deng-zi-zeng-zi-jian-yun-suan-de-qu-bie-ji-lian-xi/"/>
      <url>/post/i-i-i-i-deng-zi-zeng-zi-jian-yun-suan-de-qu-bie-ji-lian-xi/</url>
      
        <content type="html"><![CDATA[<p>在做题的过程中遇到后增运算总是想不通，于是自己就动手做了些基础练习题，获得了些感悟。</p><h4 id="自增自减运算"><a href="#自增自减运算" class="headerlink" title="自增自减运算"></a>自增自减运算</h4><p>1.练习一</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//b++=4,(b=5)</span>        <span class="token comment">//注：括号里就是我所理解的暂存值</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//b=5</span>        <span class="token keyword">int</span> x<span class="token punctuation">;</span>        x<span class="token operator">=</span>b<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//x=5,(b=6)</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//x=5</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//b=6</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>   感悟：对于后增运算来说，==总是先赋值，后运算==。“先赋值”，即b++、x=b++为该赋值的值。“后运算”，即b的值已经发生改变，只不过在没有出现下一个b的运算之前进行暂时存放。若下次出现b的运算，则此时b的值为“后运算”或者说之前暂时存放的的值。</p><p>2.练习二</p> <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">int</span> q <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> w <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> e <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        q <span class="token operator">=</span> w<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第一次q="</span><span class="token operator">+</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//q=10,(w=11)</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第一次w="</span><span class="token operator">+</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//w=11</span>        e <span class="token operator">=</span> <span class="token operator">--</span>q<span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第一次e="</span><span class="token operator">+</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//（q=9）,e=9</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第二次q="</span><span class="token operator">+</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//q=9</span>        w <span class="token operator">=</span> <span class="token operator">++</span>q<span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第二次w="</span><span class="token operator">+</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//q=10,w=10</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第三次q="</span><span class="token operator">+</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//q=10</span>        q <span class="token operator">=</span> e<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第四次q="</span><span class="token operator">+</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//q=9,(e=8)</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第二次w="</span><span class="token operator">+</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//w=10</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第二次e="</span><span class="token operator">+</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//e=8</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第三次e="</span><span class="token operator">+</span><span class="token operator">--</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//e=7</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>   感悟：对于先增或先减运算来说，==总是先运算，后赋值。==“先运算”，即–q、e=–q先进行运算，此时q的值已经发生变化。“后赋值”，即将刚才完成运算的值赋给e。</p><p>3.练习三</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> a1 <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> b1 <span class="token operator">=</span><span class="token punctuation">(</span>a1<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">++</span>a1<span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>a1<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//4(5)->6</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//b1=4,(a1=5)+6,(a1=6)+6*10=70</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>   感悟：即使在一行中，自增运算的规则依然执行。</p><p>4.练习四</p> <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        i <span class="token operator">=</span> i<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//i:1,(i=2)</span>        <span class="token comment">//前面是我最开始想的，后面是正确答案</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//i:2//i:1</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//j=i:2,(i=3)//j:1,(i=2)</span>        <span class="token keyword">int</span> k <span class="token operator">=</span> i<span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">++</span>i<span class="token operator">*</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//k=3+[4*4(i=5)]//k=2+[3*3(i=4)]</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//i:5//i:4</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//j:2//j:1</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//k:19//k:11</span>        <span class="token comment">/*        正确答案:i=1,j=1,i=4,k=11。         */</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>   感悟：输出的i并不是i++中暂存的值。</p><p>5.练习五</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">boolean</span> aa <span class="token operator">=</span> <span class="token number">100</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> bb <span class="token operator">=</span> <span class="token number">10</span><span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> ee<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> b3 <span class="token operator">=</span> aa<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">></span>ee<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//短路与，（1>ee++）为false，但ee++运算继续执行</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ee<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//ee=11</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//flase</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>6.练习六</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02_1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> n1 <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> n2 <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> n2<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"n="</span><span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//n=5,(n2=6)</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"n2="</span><span class="token operator">+</span>n2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//n2=6</span>        n <span class="token operator">=</span> <span class="token operator">++</span>n2<span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"n="</span><span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//(n2=7),n=7</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"n2="</span><span class="token operator">+</span>n2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//n2=7</span>        n <span class="token operator">=</span> <span class="token operator">--</span>n1<span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"n="</span><span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//(n1=2),n=2</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"n1="</span><span class="token operator">+</span>n1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//n1=2</span>        n <span class="token operator">=</span> n1<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"n="</span><span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//n=2,(n1=1)</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"n1="</span><span class="token operator">+</span>n1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//n1=1</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="参与逻辑运算符的自增运算"><a href="#参与逻辑运算符的自增运算" class="headerlink" title="参与逻辑运算符的自增运算"></a>参与逻辑运算符的自增运算</h4><p>1.练习一</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02_1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">++</span><span class="token operator">==</span><span class="token number">2</span> <span class="token operator">&amp;</span> <span class="token operator">++</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//1!=2，与运算，++y==2继续运算</span>            x<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"x="</span><span class="token operator">+</span>x<span class="token operator">+</span><span class="token string">",y="</span><span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//x=2,y=2</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>   感悟：与运算：前为false，后面的运算继续判断。即参与的自增运算也执行。</p><p>2.练习二</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02_1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">++</span><span class="token operator">==</span><span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">++</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//1!=2，短路与</span>            x<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"x="</span><span class="token operator">+</span>x<span class="token operator">+</span><span class="token string">",y="</span><span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//x=2,y=1</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>   感悟：短路与：前为false，后面的关系直接不用判断。即自增运算也不进行。</p><p>3.练习三</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02_1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">++</span><span class="token operator">==</span><span class="token number">2</span> <span class="token operator">|</span> <span class="token operator">++</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//1!=2，或运算，2=2</span>            x<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"x="</span><span class="token operator">+</span>x<span class="token operator">+</span><span class="token string">",y="</span><span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//x=7,y=2</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.练习四</p> <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02_1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">++</span><span class="token operator">==</span><span class="token number">2</span> <span class="token operator">||</span> <span class="token operator">++</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//1!=2，短路或，2=2</span>            x<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"x="</span><span class="token operator">+</span>x<span class="token operator">+</span><span class="token string">",y="</span><span class="token operator">+</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//x=7,y=2</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>   感悟：或运算、短路或：前为false，后面的运算继续判断。即参与的自增运算也执行。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 练习 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三月随记</title>
      <link href="/post/san-yue-sui-ji/"/>
      <url>/post/san-yue-sui-ji/</url>
      
        <content type="html"><![CDATA[<blockquote><p>“好蓝的天空啊，是青春的蓝，突然，好想去剪个头发~”</p><p>​                                                               ——《刺客伍六七》</p></blockquote><p>时间很快，开学也已经快一个月了。刚开始的我做什么事情都有动力、有目标。但我知道时间会慢慢让我颓废下去。可是在假期我成长了许多或者说想明白了些事情，所以这学期我觉得不能在浪荡下去了。开学后，开不完的没有意义的会，听着对我将来毫无用处的话，我在想我脑子是让驴踢了还是让门给挤了。</p><p>本来是想着昨天记录，后来贪玩就推到了今天。昨天我参加了计算机二级。说实话过是有点悬。但我同学也鼓励我说“你才学了多长时间”，想想也是。三天打鱼两天晒网的学习状态和总共刷了三套试题的我怎么反驳？也只能尴尬的笑笑。</p><p>通过昨天考试，我也发现了些问题。对于一些细枝末节的问题也把暴露了出来。接下来的时间就踏踏实实的过基础。昨天还想着长篇大论，现在却屁都想不出来了。</p><p>前几天看《刺客伍六七》，听到片尾曲《我想和你一起去海边》，心就一下子静了下来。就像评论里说“有歌词的是五六七的生活，纯音乐的是自己的生活。”写着随记也就是回顾下自己的生活。</p><p>貌似这一个月我什么都没成功，但是唯一的进步就是上课注意听讲了，愿意坐前面听课了，上课也愿意记笔记了。</p><p>接下来就努力吧！</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML+CSS实例练习</title>
      <link href="/post/html-css-shi-li-lian-xi/"/>
      <url>/post/html-css-shi-li-lian-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在做老师布置的网页作业。正好在小破站看到几个h5的实战小例子，视频是up主xiao-high，然后就记点心得。话不多说直接上手！</p><h2 id="大家好！我叫琲木木"><a href="#大家好！我叫琲木木" class="headerlink" title="大家好！我叫琲木木"></a>大家好！我叫琲木木</h2><p>先看展示效果：</p><iframe src="https://giphy.com/embed/L5ebV7HVmpMEm8Qj5c" width="480" height="238" frameBorder="0" class="giphy-embed" allowFullScreen></iframe><p>html代码：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>大家好，我叫琲木木！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./css/hello.css<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item yellow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>大家好!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>　　　　我叫 琲木木<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>大家好!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>　　　　我叫 琲木木<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>大家好!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>　　　　我叫 琲木木<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item pink<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>大家好!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>　　　　我叫 琲木木<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>css代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.container</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>100vh<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*公共区域*/</span><span class="token selector">.item</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 4.125rem<span class="token punctuation">;</span><span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*元素全部堆积，使元素放在最左侧*/</span><span class="token punctuation">&#125;</span><span class="token selector">.item p</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-190%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">letter-spacing</span><span class="token punctuation">:</span> 0.2em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*局部 */</span><span class="token selector">.yellow</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span>#fcf403<span class="token punctuation">;</span><span class="token property">animation</span><span class="token punctuation">:</span> bg 0.3s linear forwards<span class="token punctuation">;</span><span class="token comment">/* 动画名字，持续时间，线性渐变 */</span><span class="token punctuation">&#125;</span><span class="token selector">.yellow p</span><span class="token punctuation">&#123;</span><span class="token property">animation</span><span class="token punctuation">:</span>text 3s 0.3s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>.49<span class="token punctuation">,</span>0<span class="token punctuation">,</span>1<span class="token punctuation">)</span> forwards<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.blue</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span>#03dbfc<span class="token punctuation">;</span><span class="token property">clip</span><span class="token punctuation">:</span> <span class="token function">rect</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>1000px<span class="token punctuation">,</span>100vh<span class="token punctuation">,</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 总共时间3s，每次0.3秒间隔 */</span><span class="token property">animation</span><span class="token punctuation">:</span> bg 2.4s 0.6s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>.49<span class="token punctuation">,</span>0<span class="token punctuation">,</span>1<span class="token punctuation">)</span> forwards<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.blue p</span><span class="token punctuation">&#123;</span><span class="token property">animation</span><span class="token punctuation">:</span>text 2.4s 0.6s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>.49<span class="token punctuation">,</span>0<span class="token punctuation">,</span>1<span class="token punctuation">)</span> forwards<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.green</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span>#4efc03<span class="token punctuation">;</span><span class="token property">clip</span><span class="token punctuation">:</span> <span class="token function">rect</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>800px<span class="token punctuation">,</span>100vh<span class="token punctuation">,</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">animation</span><span class="token punctuation">:</span> bg 2.1s 0.9s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>.49<span class="token punctuation">,</span>0<span class="token punctuation">,</span>1<span class="token punctuation">)</span> forwards<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.green p</span><span class="token punctuation">&#123;</span><span class="token property">animation</span><span class="token punctuation">:</span>text 2.1s 0.9s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>.49<span class="token punctuation">,</span>0<span class="token punctuation">,</span>1<span class="token punctuation">)</span> forwards<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.pink</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span>#faa7e4<span class="token punctuation">;</span><span class="token property">clip</span><span class="token punctuation">:</span> <span class="token function">rect</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>640px<span class="token punctuation">,</span>100vh<span class="token punctuation">,</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">animation</span><span class="token punctuation">:</span> bg 1.8s 1.2s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>.49<span class="token punctuation">,</span>0<span class="token punctuation">,</span>1<span class="token punctuation">)</span> forwards<span class="token punctuation">;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span>#03DBFC 5px 5px 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token selector">.pink p</span><span class="token punctuation">&#123;</span><span class="token property">animation</span><span class="token punctuation">:</span>text 1.8s 1.2s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>.49<span class="token punctuation">,</span>0<span class="token punctuation">,</span>1<span class="token punctuation">)</span> forwards<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> bg</span><span class="token punctuation">&#123;</span><span class="token selector">from</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">to</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> text</span><span class="token punctuation">&#123;</span><span class="token selector">from</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-190%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">to</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="火箭升空"><a href="#火箭升空" class="headerlink" title="火箭升空"></a>火箭升空</h2><p>先看展示效果：</p><iframe src="https://giphy.com/embed/oPB0w0a0dCjElAx7ql" width="480" height="237" frameBorder="0" class="giphy-embed" allowFullScreen></iframe><p>html代码：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>火箭升空<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./css/rocket.css<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/rocket.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rocket<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/rocket.png<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>css代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body</span><span class="token punctuation">&#123;</span><span class="token property">overflow-y</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token comment">/*隐藏属的滚动框*/</span><span class="token punctuation">&#125;</span><span class="token selector">.container</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span><span class="token comment">/* background:#000054; */</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>2<span class="token punctuation">,</span>19<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.container .rocket</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token property">animation</span><span class="token punctuation">:</span> shake 0.5s linear infinite<span class="token punctuation">;</span><span class="token comment">/* 线性渐变，无限运动 */</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> shake</span><span class="token punctuation">&#123;</span><span class="token comment">/* 目的为了让火箭匀速升空。 */</span><span class="token comment">/* 起始位置和终点位置 */</span><span class="token selector">0%,100&amp;</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-2px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 中点位置 */</span><span class="token selector">50%</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>2px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.container .rocket::after</span><span class="token punctuation">&#123;</span><span class="token property">content</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span><span class="token comment">/* 冒火透明 */</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token function">linear-gradient</span><span class="token punctuation">(</span><span class="token function">rgb</span><span class="token punctuation">(</span>40<span class="token punctuation">,</span>150<span class="token punctuation">,</span>194<span class="token punctuation">)</span><span class="token punctuation">,</span>transparent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token comment">/*通过left和transform实现水平居中/* 先让left50%居中，再移动自身的50%，来实现居中 */</span><span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 垂直方向上的偏移 */</span><span class="token property">bottom</span><span class="token punctuation">:</span> -150px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.container i</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token comment">/* 30-100*/</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token comment">/* 1-99vw*/</span><span class="token property">top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> #FFFFFF<span class="token punctuation">;</span><span class="token property">animation</span><span class="token punctuation">:</span>line 2s linear infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> line</span><span class="token punctuation">&#123;</span><span class="token selector">from</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">to</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>100vh<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>js代码：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">window<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">function</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>n<span class="token operator">-</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//定义：光线的总数</span><span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>num<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//创建i元素</span><span class="token keyword">const</span> i <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'i'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置动态样式</span>i<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'px'</span><span class="token punctuation">;</span>i<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'vw'</span><span class="token punctuation">;</span>i<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'px'</span><span class="token punctuation">;</span><span class="token comment">//随机动画的周期</span>i<span class="token punctuation">.</span>style<span class="token punctuation">.</span>animationDuration <span class="token operator">=</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">10</span><span class="token operator">+</span><span class="token string">'s'</span> <span class="token comment">//0.5-3</span><span class="token comment">//将i插入到container元素中</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.container'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> 练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础语法_面向对象（三）</title>
      <link href="/post/java-ji-chu-yu-fa-mian-xiang-dui-xiang-san/"/>
      <url>/post/java-ji-chu-yu-fa-mian-xiang-dui-xiang-san/</url>
      
        <content type="html"><![CDATA[<h2 id="7-封装（续）"><a href="#7-封装（续）" class="headerlink" title="7.封装（续）"></a>7.封装（续）</h2><h4 id="5-static关键字"><a href="#5-static关键字" class="headerlink" title="5.static关键字"></a>5.static关键字</h4><ol><li><p>static可以修饰全局变量，用static修饰的变量称为静态变量，静态变量<strong>不属于任何对象</strong>，静态变量<strong>被当前类的所有对象共享</strong>，静态变量可以使用<code>类名.变量名</code>直接访问。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> sex<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestStudent</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Student</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token string">"男"</span><span class="token punctuation">;</span>        <span class="token class-name">Student</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        s1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"张三"</span><span class="token punctuation">;</span>        <span class="token class-name">Student</span> s2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        s2<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"李四"</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span>sex <span class="token operator">==</span> s2<span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211108163350623.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211108163350623"></p><blockquote><p>从运行结果看：静态变量确实被本类的所有对象共享。</p></blockquote></li><li><p>内存原理：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211108170242148.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211108170242148"></p></li><li><p>static可以修饰方法，被static修饰的方法称之为静态方法。静态方法可以使用<code>类名.方法名</code>直接调用。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Student</span><span class="token punctuation">.</span><span class="token function">attendClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>static可以用来修饰代码块，被static修饰的代码块称之为静态代码块，静态代码块在当前类被加载进内存的时候就会执行，并且整个程序运行期间，<font color = "#ff0000">先于<strong>main()方法</strong>之前执行，只执行一次。</font>主要作用：<strong>给静态变量初始化</strong>。</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20220208154128630.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20220208154128630"></p><p>运行结果：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20220208154336587.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20220208154336587"></p><blockquote><p>可以看出：静态代码块优先于主方法（静态方法和构造方法），最先被执行。</p><ul><li>程序执行顺序：静态代码块→静态方法→普通代码块→构造方法</li></ul><p>由此也可以得出在静态代码块里可以访问静态成员以及静态方法，但不能访问实例成员。</p><ul><li>内存分配顺序：静态变量→静态方法→静态代码块→构造方法</li></ul></blockquote></li><li><p>静态方法内不能直接调用非静态的成员(实例属性、实例方法)。</p><ul><li><p>当为普通方法时，方法间可以相互调用：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211108170743959.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211108170743959"></p></li><li><p>当被static修饰了之后，实例成员就不能被静态方法所调用。</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211108172148123.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211108172148123"></p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211108173352077.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211108173352077"></p><p>如图：出现报错(<code>Non-static 方法 &#39;exam()&#39; cannot be referenced from a static context</code>)。</p><p>因为在JVM给静态方法分配内存时，此时的非静态变量和方法还没有出现。</p></li></ul></li><li><p>静态方法、静态代码块内不能出现this。静态方法中，实例成员还没出现呢，哪来的this关键字。</p></li></ol><blockquote><p><strong>类加载的机制：</strong></p><p>JVM虚拟机，类加载器负责把Java程序编译后的字节码文件加载进内存，加载字节码文件进内存后，JVM就会首先给当前类中的静态成员去分配空间。创建对象的时候，才会给实例成员分配空间。反过来，实例方法可以访问静态成员。</p><p><strong>内存分配的顺序：</strong></p><p>静态变量 → 静态方法 → 静态代码块 → 实例变量 → 构造方法 → 实例方法</p></blockquote><h4 id="6-设计模式——单例模式"><a href="#6-设计模式——单例模式" class="headerlink" title="6.设计模式——单例模式"></a>6.设计模式——单例模式</h4><ol><li><p>设计模式（Design pattern）：</p><ul><li>设计模式是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。</li><li>使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。</li><li>由GOF四人帮编写23种常用的设计模式。</li></ul></li><li><p>单例模式：</p><ol><li><p>在整个程序生命周期内，某个类只有一个实例存在（即<strong>只能存在一个对象</strong>）。这个实例必须自行实例化（即<strong>自行创建对象</strong>），并且向外界提供这个实例（即<strong>外界只能访问，但不能修改</strong>）。</p></li><li><p>实现要点：</p><ul><li><p>构造方法私有化</p><blockquote><p>解析：为什么要构造方法私有化？因为在外界创建对象时。可以创建多个对象，而这些对象是通过调用Jvm所创建的构造方法，所以我们需要自行创建一个构造方法，这样JVM就不会自主创建了，同时将构造方法进行私有化，外界就不能创建对象了。换言之，<strong>杜绝外界创建多个对象</strong>。</p></blockquote></li><li><p>私有的静态变量持有本类的唯一对象</p><blockquote><p>解析：由于构造方法私有化，外界不能创建对象（所以我们就的自己创建对象，我们将自己创建的对象作为全局变量存在。）进而不能访问类中的全局变量。此时我们把刚才的全局变量加上static关键字后，外界就可以通过类名.变量访问到了。如果不将静态对象私有化，则外界就可以随意更改变量的值，若<code>Phone.p = null</code>时，创建的对象在堆内存中会因为没有变量指向而导致被JVM当作垃圾清理掉。换言之，<strong>杜绝外界随意修改对象的值</strong>。</p></blockquote></li><li><p>公有的静态方法用来向外提供本类的唯一对象</p><blockquote><p>解析：因为在类中的实例方法创建后，由于对象已经私有化，外界访问不到，所以我们需要将实例方法变成静态方法。这样<strong>外界就可以通过方法来创建对象</strong>。</p></blockquote><p>如下图所示：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211110164027651.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211110164027651"></p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211110164055163.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211110164055163"></p><blockquote><p>通过运行结果可以发现，创建的三个对象的内存地址是一样的，可以得出结论，<strong>外界创建的对象是同一个</strong>，即完成了类中只有一个实例。</p></blockquote></li></ul></li></ol></li><li><p>单例模式代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Phone</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//2、私有的静态变量持有本类的唯一对象</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Phone</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//1、构造方法私有化</span>    <span class="token keyword">private</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//3、公有的静态方法用来向外界提供本类的唯一对象</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Phone</span> <span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> p<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>恶汉式和懒汉式的区别就在于创建对象位置不同，也就导致运行加载速度不同。恶汉式在方法执行前提前创建，懒汉式则是当你需要使用方法时才会创建对象。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//懒汉式</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Phone</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Phone</span> p<span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Phone</span> <span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> p<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="8-继承"><a href="#8-继承" class="headerlink" title="8.继承"></a>8.继承</h2><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211110173932703.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211110173932703"></p><h4 id="1-子类与父类的关系"><a href="#1-子类与父类的关系" class="headerlink" title="1.子类与父类的关系"></a>1.子类与父类的关系</h4><ul><li>is-a ：意味 “子类是一个父类的…”。</li><li>父类更抽象，更普通；子类更具体，更特殊。例：车-汽车，自行车，电动车。</li></ul><h4 id="2-继承的概念"><a href="#2-继承的概念" class="headerlink" title="2.继承的概念"></a>2.继承的概念</h4><ul><li>基于已经存在的类，来构建新类，叫做继承。</li><li>使用extends关键字来实现。被继承的类，称之为父类或超类，延伸出来的新类叫做子类。</li><li>子类会继承父类中所有的属性和方法。</li><li>每当有子类对象被创建的时候，都会先创建一个父类对象（创建的子类对象中，有父类对象存在）。</li><li>每当执行子类代码时，也会先进行父类的构造方法，在进行子类的构造方法。</li></ul><h4 id="3-继承的模型图"><a href="#3-继承的模型图" class="headerlink" title="3.继承的模型图"></a>3.继承的模型图</h4><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211110190740255.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211110190740255"></p><h4 id="4-关键字this和super的区别"><a href="#4-关键字this和super的区别" class="headerlink" title="4.关键字this和super的区别"></a>4.关键字this和super的区别</h4><table><thead><tr><th><code>this</code>&amp;<code>super</code></th><th align="left">区   别</th></tr></thead><tbody><tr><td><code>this</code></td><td align="left">本类的引用</td></tr><tr><td><code>super</code></td><td align="left">子类对父类对象的引用</td></tr><tr><td><code>this()</code></td><td align="left">可以调用本类其他的构造方法（构造方法的第一行）</td></tr><tr><td><code>super()</code></td><td align="left">在子类中，可以调用父类的构造方法（子类构造方法的第一行）</td></tr></tbody></table><blockquote><ul><li>栈：stack。给方法的执行临时开辟空间，方法执行结束后，此内存区域也会被释放掉。除了存放引用变量，方法内的局部变量（<strong>声明的一些基本数据变量，变量值</strong>）也会存放在栈内存中。执行速度比较快。</li><li>堆：heap。<strong>存放对象</strong>。执行速度比较慢。</li></ul></blockquote><h4 id="5-例子：人类-学生类"><a href="#5-例子：人类-学生类" class="headerlink" title="5.例子：人类-学生类"></a>5.例子：人类-学生类</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//Person类</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>    <span class="token class-name">String</span> sex<span class="token punctuation">;</span> <span class="token comment">//性别</span>    <span class="token class-name">String</span> id<span class="token punctuation">;</span> <span class="token comment">//身份证号</span>    <span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"sex"</span><span class="token punctuation">,</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"person的无参构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> sex<span class="token punctuation">,</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> sex<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"person的有参构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"人睡觉"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token comment">//Student类</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> grade_class<span class="token punctuation">;</span> <span class="token comment">//年级班级</span>    <span class="token keyword">public</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> sex<span class="token punctuation">,</span> <span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> grade_class<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>grade_class <span class="token operator">=</span> grade_class<span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"student的有参构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"Student&#123;"</span> <span class="token operator">+</span>                <span class="token string">"grade_class='"</span> <span class="token operator">+</span> grade_class <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", sex='"</span> <span class="token operator">+</span> sex <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", id='"</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">'&#125;'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token comment">//TestStudent类</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestStudent</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"男"</span><span class="token punctuation">,</span><span class="token string">"1234"</span><span class="token punctuation">,</span><span class="token string">"三年二班"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211110202045322.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211110202045322"></p><blockquote><p>运行结果也证实执行子类构造方法前会先执行父类的构造方法。</p></blockquote><h4 id="6-方法的重写（Override）"><a href="#6-方法的重写（Override）" class="headerlink" title="6.方法的重写（Override）"></a>6.方法的重写（Override）</h4><ol><li><p>概念</p><p>方法的重写是指子类对从父类继承过来的方法，可以进行重写。</p></li><li><p>特点</p><ul><li>重写方法和被重写方法必须具有相同的<font color = #ff0000>返回值类型、方法名、参数列表</font>。</li><li>重写方法不能使用比被重写方法更高的访问权限。</li><li>父类中的私有方法不能被重写。</li></ul></li><li><p><code>@Override</code>：注解，标志着当前的方法是一个重写过的方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"学生睡觉"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="7-final关键字"><a href="#7-final关键字" class="headerlink" title="7.final关键字"></a>7.final关键字</h4><ul><li><p>final关键字的特点</p><ul><li><p>final可以修饰变量、方法、类。</p></li><li><p>被final修饰过的变量称为常量，所以必须赋初值（initialization）。可以调用此常量，但不能修改。</p></li><li><p>常量一般和static关键字配合使用（静态常量名必须大写）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">A</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token comment">//静态常量</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>被final修饰过的方法称为最终的方法，最终的方法不能被重写。</p></li><li><p>被final修饰过的类称为最终的类，最终的类不能被继承。</p></li></ul></li></ul><h4 id="8-Object类"><a href="#8-Object类" class="headerlink" title="8.Object类"></a>8.Object类</h4><ul><li><p>Object类：在Java中，是所有类的祖先。所有类都直接或间接继承自Java.lang,Object类。</p></li><li><p>常用方法：</p><ul><li><font color = #ff0000>toString()</font></li><li><font color = #ff0000>equals()</font></li><li>hashcode()</li><li>clone()</li><li>getClass()</li><li>finalize()</li></ul></li><li><p>equals()</p><ul><li><p>Object类</p><p>1.在Object类中的equals()方法默认是<font color = "#ff0000">比较两个对象是否为同一个对象</font>。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//this为调用此方法的对象</span>    <span class="token comment">//obj为被比较的对象</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.例子：通过重写equals()方法来判断是否为同一对象</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//Dog类</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> color<span class="token punctuation">;</span>    <span class="token class-name">String</span> dogID<span class="token punctuation">;</span>    <span class="token comment">//判断d1和d2两个对象的属性值是否相等，如果相等则认为是同一个对象。</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//this为调用此方法的对象(比较的对象)。</span>        <span class="token comment">//obj为被比较的对象。但因数据类型不同，所以需要将“Object类型” 强制转换为 “比较的对象的数据类型”。</span>        <span class="token class-name">Dog</span> dog <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Dog</span><span class="token punctuation">)</span>obj<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>color <span class="token operator">==</span> dog<span class="token punctuation">.</span>color <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dogID <span class="token operator">==</span> dog<span class="token punctuation">.</span>dogID<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//TestDog类</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDog</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Dog</span> d1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        d1<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">"blue"</span><span class="token punctuation">;</span>        d1<span class="token punctuation">.</span>dogID <span class="token operator">=</span> <span class="token string">"010"</span><span class="token punctuation">;</span>        <span class="token class-name">Dog</span> d2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        d2<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">"blue"</span><span class="token punctuation">;</span>        d2<span class="token punctuation">.</span>dogID <span class="token operator">=</span> <span class="token string">"010"</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>d1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>d2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"信息比对正确，这是大黄"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"信息比对错误，这不是大黄"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>String类</p><p>在String类中的equals()方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> anObject<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//this 表示调用该方法的对象</span>        <span class="token comment">//anObject 表示被比较的对象</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> anObject<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// instanceof关键字可以判断左边对象是否是右边类或者子类的一个实例</span>        <span class="token comment">//需要用到对象的强制类型转换时，需要使用instanceof进行判断。</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>anObject <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> anotherString <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>anObject<span class="token punctuation">;</span>            <span class="token comment">//value 实际上就是String类中的一个字符型常量数组char value[];</span>            <span class="token comment">//说到底，string最后还是字符数组进行存储</span>                        <span class="token comment">//调用该方法的对象的值的数组长度</span>            <span class="token keyword">int</span> n <span class="token operator">=</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span>            <span class="token comment">//被比较的对象的数组长度</span>            <span class="token comment">//pan'duan</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> anotherString<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">char</span> v1<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>                <span class="token keyword">char</span> v2<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> anotherString<span class="token punctuation">.</span>value<span class="token punctuation">;</span>                <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token comment">//长度自减，不等于0，执行while循环</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">//分别对应两个对象中字符是否相等</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>v1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> v2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    i<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>拓展：<br>instanceof关键字：</p><ol><li>首先返回值类型是布尔值</li><li>比较过程中左边一般是对象，右边是类</li><li>作用是来判断左边是否属于右边的类或者是该类的子类创建的一个实例对象</li><li>需要用到对象的强制类型转换时，需要使用instanceof进行判断。</li></ol></blockquote></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础语法_面向对象（二）</title>
      <link href="/post/java-ji-chu-yu-fa-mian-xiang-dui-xiang-er/"/>
      <url>/post/java-ji-chu-yu-fa-mian-xiang-dui-xiang-er/</url>
      
        <content type="html"><![CDATA[<h2 id="6-字符串"><a href="#6-字符串" class="headerlink" title="6.字符串"></a>6.字符串</h2><h4 id="1-String的创建方式"><a href="#1-String的创建方式" class="headerlink" title="1.String的创建方式"></a>1.String的创建方式</h4><ul><li><p>直接赋值：<code>String a = &quot;hello&quot;;</code></p><blockquote><p>先去字符串常量池查找有没有<code>hello</code>这个字符串，如果有，那么就让变量a指向这个字符串；如果没有，就创建一个<code>hello</code>存入常量池中。</p></blockquote></li><li><p>创建后赋值：<code>String b = new String(&quot;hello&quot;) ;</code></p><blockquote><p>在堆中开辟一个空间存放<code>hello</code>这个字符串，然后回去常量池中检查有没有<code>hello</code>这个字符串，如果有什么也不用做；如果没有，就创建一个<code>hello</code>存入常量池。</p></blockquote></li><li><p>在Java中，只要是new出来的东西，那么一定会出现在堆内存中，并且new几个，就会在堆内存中出现几个。</p></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> a <span class="token operator">=</span> <span class="token string">"hello"</span><span class="token punctuation">;</span><span class="token class-name">String</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">==</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>==</code>与<code>equals()</code>的区别：</p><ol><li>对于<code>==</code>：<ul><li>如果是两个<strong>基本数据类型</strong>进行比较，那么比较的是值。</li><li>如果是两个<strong>引用数据类型</strong>进行比较，那么比较的是<strong>（引用地址）内存地址</strong>。</li></ul></li><li>对于<code>equals()</code>：<ul><li>在<code>Object类</code>(没有重写<code>equals()</code>)，比较的是两个对象的<strong>引用地址</strong>。</li><li>在<code>String类</code>（重写<code>equals()</code>），比较的是两个对象的<strong>字符串的内容（字面量）</strong>是否一样。</li></ul></li><li>在<code>Object类</code>中，因为<code>equals()</code>方法没有重写,所以和<code>==</code>都是比较两个对象的<strong>引用地址</strong>。</li></ol></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> a <span class="token operator">=</span> <span class="token string">"abc"</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> b <span class="token operator">=</span> <span class="token string">"abc"</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b <span class="token operator">==</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b <span class="token operator">==</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c <span class="token operator">==</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-String对象的声明和操作"><a href="#2-String对象的声明和操作" class="headerlink" title="2.String对象的声明和操作"></a>2.String对象的声明和操作</h4><ul><li><p>String对象是不可变的。</p></li><li><p>在类中每一个看起来会修改String值的方法，其实都是**<font color='#ff0000'>创建了新的String对象</font>**（包含修改后的字符串内容）。其中，之前所指向的内容不在被指向；在堆中的话，之前不被指向的内容则会在jvm虚拟机的特性(java对象的内存管理机制)被自动清理掉。</p></li><li><p>字符串对象共同指向的比较</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//String类型指向的是常量池的字符串，而不是内存地址。</span><span class="token class-name">String</span> a <span class="token operator">=</span> <span class="token string">"abc"</span><span class="token punctuation">;</span><span class="token class-name">String</span> b <span class="token operator">=</span> <span class="token string">"abc"</span><span class="token punctuation">;</span><span class="token class-name">String</span> e <span class="token operator">=</span> a<span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//abc</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//abc</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//abc</span>e <span class="token operator">=</span> <span class="token string">"cba"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//cba</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//abc</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//abc</span><span class="token comment">//钥匙开门：我能开我家门，我把钥匙给你，你也能开我家门，但是你没给我你家的钥匙，所以我就开不了你家的门。</span><span class="token comment">//数组指向的是内存地址</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a1 <span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a2 <span class="token operator">=</span> a1<span class="token punctuation">;</span>a2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[20,1,2]</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>a2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[20,1,2]</span><span class="token comment">//堆内存</span><span class="token class-name">String</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> c1 <span class="token operator">=</span> c<span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//abc</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//abc</span><span class="token comment">//c和c1指向堆内存里的”abc“</span>c1 <span class="token operator">=</span> <span class="token string">"cba"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//abc</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//cba</span><span class="token comment">//c1指向常量池里的"cba"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> a<span class="token operator">=</span><span class="token string">"abd"</span><span class="token punctuation">;</span><span class="token class-name">String</span> b<span class="token operator">=</span><span class="token string">"abd"</span><span class="token punctuation">;</span><span class="token class-name">String</span> c<span class="token operator">=</span>a<span class="token punctuation">;</span><span class="token class-name">String</span> a1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"abd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> b1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"abd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> c1<span class="token operator">=</span>a1<span class="token punctuation">;</span><span class="token comment">//abd</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=====00===="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">==</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token operator">==</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token operator">==</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=====01===="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a1<span class="token operator">==</span>b1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b1<span class="token operator">==</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c1<span class="token operator">==</span>a1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=====02===="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c1<span class="token operator">==</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>c1<span class="token operator">=</span><span class="token string">"abd"</span><span class="token punctuation">;</span>c<span class="token operator">=</span><span class="token string">"abd"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"====03====="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c1<span class="token operator">==</span>a1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"====04====="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c1<span class="token operator">==</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="3-String对象的常用方法"><a href="#3-String对象的常用方法" class="headerlink" title="3.String对象的常用方法"></a>3.String对象的常用方法</h4><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20220121165943413.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20220121165943413"></p><blockquote><p>length()：返回字符串的长度（个数）</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"hello world 你好 世界 !"</span><span class="token punctuation">;</span><span class="token keyword">int</span> i <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果返回12</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>charAt(index)：返回指定的下标索引index处的字符char（根据索引查找字符）。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//声明char型，返回下标为2的字符。</span>        <span class="token keyword">char</span> c1 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//声明int型，返回下标为2的字符的ASCII码。</span>        <span class="token keyword">int</span> c2 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>indexOf(int i/[char c]/[String str])：返回指定字符在字符串中<strong>第一次</strong>出现的下标索引（根据字符查找索引）。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> index1 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">108</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//参数给int ASCII码</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> index2 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'l'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//参数给char</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> index3 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"l"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//参数给String</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index3<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>indexOf(int i/[char c]/[String str],int fromIndex)：从指定下标处，开始查找指定字符第一次出现的索引。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> index4  <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//参数给int ASCII码</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> index5  <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'l'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//参数给char</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> index6 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"l"</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//参数给String</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index6<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>lastIndexOf(char c)：返回指定的字符在字符串中最后一次出现的索引。（同indexOf();用法相同）</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> index7 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'l'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果为9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>concat(str)：将指定的字符串拼接到字符串的结尾。（同连接符“+”用法相同）</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> concat <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">"\t hello java!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>concat<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//"hello world 你好 世界 !hello java!"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>equals(str)：判断两个字符串的字面量是否相等</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> str1 <span class="token operator">=</span> <span class="token string">"Hello Whorld"</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>toUpperCase(str); 将字符串转为大写</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> upperCase <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>upperCase<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//"HELLO WORLD 你好 世界 !"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>toLowerCase(str); 将字符串转为小写</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> lowerCase <span class="token operator">=</span> upperCase<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>lowerCase<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//"HELLO WORLD 你好 世界 !" ->"hello world 你好 世界 !"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>contians(CharSequence s); 字符串中是否包含指定的**字符序列(CharSequence),**返回Boolean值。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">boolean</span> contains <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"llo w"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>contains<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>substring(index); 从index处(包含index处)开始截取字符串，一直截取到最后。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> substring <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>substring<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//"ello world!"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p> substring(int beginIndex, int endIndex); 从beginIndex处(包含beginIndex处)开始截取字符串，一直截取到endIndex(不包endIndex)之前。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> substring1 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>substring1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//"hello world!" -> "ello w"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>split(str); 根据给定的正则表达式拆分字符串。结果是一个字符串的数组。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//以空格为拆分符。</span><span class="token comment">//方法一、用数组方法打印数组</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>split<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[hello, world, 你好, 世界, !]</span><span class="token comment">//方法二、增强for循环遍历数组</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token operator">:</span>split<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>compareTo(String anotherString); 按照字典顺序比较两个字符串，用比较的字符串减去被比较的字符串的差值。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> compareTo <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token string">"aello world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>compareTo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// a-h => 7</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>trim(); 去除掉字符串两端的空格。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token string">" hehe haha "</span><span class="token punctuation">;</span><span class="token class-name">String</span> trim <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>trim<span class="token operator">+</span><span class="token string">"   "</span><span class="token operator">+</span>trim<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//"hehe haha" 字符串长度：11->9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>starsWith(str); 检测字符串是否以str开头。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">boolean</span> startsWith <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">" hehe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>startsWith<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>endswith(str); 检测字符串是否以str结尾。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">boolean</span> endsWith <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">"haha "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>endsWith<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>replace(被替换的内容，替换的新内容); 替换</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> replace <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>replace<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// "/hehe/haha/"</span><span class="token class-name">String</span> replace1 <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"haha"</span><span class="token punctuation">,</span> <span class="token string">"哈哈"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>replace1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//" hehe 哈哈 "</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>replaceFirst(); 只替换所选择的第一个的内容</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> replaceFirst <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">replaceFirst</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>replaceFirst<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//"/hehe haha "</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>replaceAll(); 替换掉所选择的内容</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> replaceAll <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> <span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>replaceAll<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//"abcheheabchahaabc"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="7-封装"><a href="#7-封装" class="headerlink" title="7.封装"></a>7.封装</h2><blockquote><ol><li>OOP(Object Oriented Programming)：面向对象编程</li><li>面向对象编程的三大特性：封装、继承、多态。</li></ol></blockquote><h4 id="1-封装的概念"><a href="#1-封装的概念" class="headerlink" title="1.封装的概念"></a>1.封装的概念</h4><ul><li>将东西打包装在一起，以新的形式展现出来</li><li>将重要的信息隐藏，不让外界看到</li><li>将数据和方法包装在类中，再加以隐藏。</li></ul><h4 id="2-属性私有化"><a href="#2-属性私有化" class="headerlink" title="2.属性私有化"></a>2.属性私有化</h4><ul><li><p>private关键字修饰的属性，只能在本类中被访问。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//属性私有化：private修饰的属性，只能在本类中被访问。</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token comment">//如果想让外界访问到，则通过方法来实现。</span>    <span class="token comment">//1、给属性赋值</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">//2、获取属性值</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestStudent</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Student</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        stu<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>需要注意的是：</p><ol><li>给属性赋值(Setter)方法中的返回值是void，而获取属性值(Getter)方法中就需要根据返回的数据类型来判断。</li><li>属性私有化后name属性就不能通过<code>stu.name();</code>来调取了，只能通过<code>stu,setName();</code>来访问；同理，打印语句<code>System.out.println(stu.name());</code>也变成了<code>System.out.println(stu.getName());</code></li></ol></blockquote></li></ul><h4 id="3-构造方法"><a href="#3-构造方法" class="headerlink" title="3.构造方法"></a>3.构造方法</h4><ol><li><p>语法规则</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">访问修饰符 方法名（与类名相同）<span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>特点</p><ul><li>构造方法的方法名与类名完全相同</li><li>构造方法没有返回值类型</li></ul></li><li><p>构造方法的调用:</p><p>使用new 操作符。比如<code>Animal  a = new Animal();</code></p></li><li><p>构造方法可以重载，可以有：无参数的构造方法，也可以有带参数的构造方法。</p></li><li><p>构造方法的主要作用：<font color='#ff0000'>给属性赋合适的初值</font>。</p></li><li><p>举例</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">int</span> legCount<span class="token punctuation">,</span><span class="token class-name">String</span> color<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>legCount <span class="token operator">=</span> legCount<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>color <span class="token operator">=</span> color<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">Animal</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">"奶酪"</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">"黄色"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>分析 过程： </p><p>1.在栈内存中开辟空间，保存Animal b 这个引用变量。</p><p>2.在堆中给属性开辟空间。</p><p>3.调用构造方法。如果调用的是带参的构造方法，把传进来的参数，挨个的赋值到堆中的属性上。</p><p>4.让栈中的引用变量，指向堆中的对象。</p></blockquote></li><li><p>每一个类，如果你没有声明任何的构造方法，那么JVM会默认帮你生成一个公有的无参的构造方法。并且创建对象的时候，会自动去调用它。如果你在类中声明了构造方法，那么JVM就不会再帮你生成任何构造方法了。</p></li><li><p>在类的构造方法中，可以使用<code>this()</code>来调用本类中的其他的构造方法，这条语句要求是<font color = '#ff0000'>构造方法中的<strong>第一条语句</strong></font>。</p></li><li><p><strong>构造方法与普通方法的区别：</strong></p><ol><li>语法上。无返回值类型。方法名与类名完全一致。</li><li>调用上。普通方法可以用对象来调用。构造方法只能在创建对象的对象使用new操作符来调用。</li><li>每次构造方法被执行，都会有一个对象被创建。普通方法可以使用对象进行无限次的调用。</li></ol></li></ol><h4 id="4-toString-方法"><a href="#4-toString-方法" class="headerlink" title="4.toString()方法"></a>4.toString()方法</h4><ul><li><p>练习创建一个电脑类,要求有品牌，型号，价格,颜色等属性。实现对属性的封装。<br>要求，创建对象的时候，可以快速的给这些属性赋值。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//Computer类</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Computer</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> brand<span class="token punctuation">;</span> <span class="token comment">//品牌</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> type<span class="token punctuation">;</span> <span class="token comment">//型号</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> price<span class="token punctuation">;</span> <span class="token comment">//价格</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> color<span class="token punctuation">;</span> <span class="token comment">//颜色</span>    <span class="token keyword">public</span> <span class="token class-name">Computer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"这是无参的构造函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Computer</span><span class="token punctuation">(</span><span class="token class-name">String</span> brand<span class="token punctuation">,</span> <span class="token class-name">String</span> type<span class="token punctuation">,</span> <span class="token keyword">double</span> price<span class="token punctuation">,</span> <span class="token class-name">String</span> color<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"这是有参的构造函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>color <span class="token operator">=</span> color<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBrand</span><span class="token punctuation">(</span><span class="token class-name">String</span> brand<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> brand<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> type<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">String</span> type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> price<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">double</span> price<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> color<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">String</span> color<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>color <span class="token operator">=</span> color<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span>  <span class="token string">"品牌："</span> <span class="token operator">+</span> brand <span class="token operator">+</span>                <span class="token string">" 型号："</span> <span class="token operator">+</span> type <span class="token operator">+</span>                <span class="token string">" 价格："</span> <span class="token operator">+</span> price <span class="token operator">+</span>                <span class="token string">"元 颜色："</span> <span class="token operator">+</span> color                <span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//TestComputer类</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestComputer</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//第一种：使用new创建对象，没有初始化，所以调用了无参的构造函数。</span>        <span class="token comment">//没有通过toString()方法，所以不能直接通过调用对象来打印。</span>        <span class="token class-name">Computer</span> c1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Computer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        c1<span class="token punctuation">.</span><span class="token function">setBrand</span><span class="token punctuation">(</span><span class="token string">"小米"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        c1<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token string">"小米10"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        c1<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        c1<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token string">"黑色"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"品牌："</span><span class="token operator">+</span>c1<span class="token punctuation">.</span><span class="token function">getBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" 型号："</span><span class="token operator">+</span>c1<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" 价格："</span><span class="token operator">+</span>c1<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"元 颜色："</span><span class="token operator">+</span>c1<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//第二种：使用new创建对象，进行了初始化，所以调用了带有参数的构造函数。</span>        <span class="token comment">//通过toSting()方法来实现对象的调用进行打印，此过程中。</span>        <span class="token class-name">Computer</span> c2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Computer</span><span class="token punctuation">(</span><span class="token string">"华为"</span><span class="token punctuation">,</span><span class="token string">"华为p50"</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">,</span><span class="token string">"黑色"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//在java中，直接打印对象，默认是"包名.类名@哈希码(可以理解为对象的内存地址)"</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行图如下：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211108160128942.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211108160128942"></p><blockquote><p>需要注意的是：</p><ol><li><p>在<code>new Computer();</code>过程中没有初始化就会执行无参的构造函数；相反，进行了初始化就会执行带有参数的构造函数。</p></li><li><p>在java中，直接打印对象，默认是<font color = #FF0000> <strong>包名.类名@哈希码</strong> </font>(可以理解为对象的内存地址)。所以如果想打印对象就需要通过<code>toString();</code>方法来实现。</p></li><li><p>出现2的原因是：它使用Object类中的toString()。</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20220101144748813.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20220101144748813"></p></li></ol></blockquote></li></ul><hr><p><font size='14px'><em><strong>To be continued~</strong></em></font></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础语法_面向对象（一）</title>
      <link href="/post/java-ji-chu-yu-fa-mian-xiang-dui-xiang-yi/"/>
      <url>/post/java-ji-chu-yu-fa-mian-xiang-dui-xiang-yi/</url>
      
        <content type="html"><![CDATA[<h2 id="1-面向过程-amp-面向对象"><a href="#1-面向过程-amp-面向对象" class="headerlink" title="1.面向过程 &amp; 面向对象"></a>1.面向过程 &amp; 面向对象</h2><ol><li>面向过程（结构化程序设计）：<ul><li>程序=算法+数据结构</li><li>算法第一，数据结构第二</li><li>面向过程的编程需要我们对过程的每一步进行严格控制，并且每个过程之间联系非常紧密。</li></ul></li><li>面向对象：<ul><li>程序=对象+对象+对象+…</li><li>数据第一，算法第二</li><li>关键：让每一个对象负责执行一组相关任务</li><li>面向对象的编程我们只需要把任务拆分为几个独立的小任务，然后由每个对象来完成这些小任务，并且这些人物之间关系没那么紧密。</li></ul></li><li>举例：青椒炒肉的做法逻辑。</li></ol><h2 id="2-类和对象"><a href="#2-类和对象" class="headerlink" title="2.类和对象"></a>2.类和对象</h2><ol><li><p>类：类是模板，类是蓝图，是一组类似对象的共同抽象定义。</p><p>例：狗有四条腿，猫有四条腿，老虎有四条腿，狮子也有四条腿。他们都有犬牙、可以捕猎以及吃肉等。</p><p><strong>总结：提取<font color = ff0000>个体</font>中他们共同的特性，定义一个新的名称叫“食肉动物”。我们把新的物种成为有一个新的类。</strong><font color = "ff0000"><strong>先从个体中总结出一个共有的类（共同属性的集合），在从类中实例出具体的对象。</strong></font></p></li><li><p>对象：对象由类产生出来的，具有上述共同特性的一个单独的个体。对象是类的一个实例化的具体表现。</p></li><li><p>在Java中：<font color = "ff0000">先有类，再有对象 </font>。</p></li><li><p>类可以当作一个有共同特点的集合，而对象就相当于在名词前加了一个定语。</p></li><li><p>类存在的目的就是实例化对象。</p></li></ol><h2 id="3-类的创建"><a href="#3-类的创建" class="headerlink" title="3.类的创建"></a>3.类的创建</h2><ol><li>是定义类名</li><li>编写<font color = #ff0000><strong>属性</strong></font>代表类的静态特性。比如：姓名、年龄、学号。</li><li>编写<font color = #ff0000><strong>方法</strong></font>代表类的动态行为（操作）。比如：看书、打游戏、学习。</li></ol><h2 id="4-对象的创建"><a href="#4-对象的创建" class="headerlink" title="4.对象的创建"></a>4.对象的创建</h2><p>以Student类为例</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Student</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//类名 变量名 = new 类名();</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol><li><p>在栈中声明引用变量：Student stu</p></li><li><p>在堆中开辟一个内存空间用来存储变量值。执行new Student();</p><p><font color = "ff0000">堆中占多大内存取决于属性是什么数据类型。</font></p></li><li><p>使第一步栈中的引用变量指向堆中的对象。</p></li><li><p>导航符<code>.</code>可以修改属性的值和调用方法(通过对象发送消息的的功能体现)。</p></li></ol><p>特点：这样我们就可以通过stu这个变量来找到堆内存中的这个对象，也可以通过stu改变堆内存中属性的值。</p><p><font color = "ff0000">注：每创建一个对象，在堆中内存就会开辟一个内存空间，而在方法区的内存只占一份。</font>在方法区中，哪个对象调用方法，这个方法就有调用他的对象的属性。举例：磨坊磨小麦。</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211002180955452.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211002180955452"></p><ul><li><p>创建学生类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//1.学生属性</span>    <span class="token keyword">int</span> stu_num<span class="token punctuation">;</span><span class="token comment">//学号</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span><span class="token comment">//姓名</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span><span class="token comment">//年龄</span>    <span class="token class-name">String</span> sex<span class="token punctuation">;</span><span class="token comment">//性别</span>    <span class="token comment">//2.学生行为</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attendClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"在上课"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"在考试"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建测试类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestStudent</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Student</span> stu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        stu<span class="token punctuation">.</span>stu_num <span class="token operator">=</span> <span class="token number">1001</span><span class="token punctuation">;</span>        stu<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"张三"</span><span class="token punctuation">;</span>        stu<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>        stu<span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token string">"男"</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span>stu_num<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>        stu<span class="token punctuation">.</span><span class="token function">attendClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        stu<span class="token punctuation">.</span><span class="token function">exam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行图如下：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211002181419579.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211002181419579"></p></li></ul><h2 id="5-方法的定义"><a href="#5-方法的定义" class="headerlink" title="5.方法的定义"></a>5.方法的定义</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java">访问修饰符 返回值类型 方法名（参数列表）<span class="token punctuation">&#123;</span>    <span class="token comment">//方法体</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"在考试"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>访问修饰符：</p><ul><li><p>控制当前方法对其他类或其他方法的访问权限。</p></li><li><p>public、protected、默认的、private。</p><blockquote><p>访问权限由低→高</p></blockquote></li></ul></li><li><p>返回值类型：</p><ul><li><p>返回值类型是指方法执行结束以后，需要向外返回的数据类型。可以是基本数据类型，也乐意是引用数据类型。</p></li><li><p>把方法当作一个模块(比如”黑匣子“)，完成某个特定的功能后，返回一个处理结果。</p></li></ul></li></ol><ul><li><p>如果不需要外部提供一个返回值，需要使用关键字<code>void</code>。</p></li><li><p>如果方法有返回值，方法体中必须使用关键字<code>return</code>返回该值，返回值类型为该方法所定义的返回值类型。</p></li><li><p>调用此方法时，可以声明一个变量来接收此方法的返回结果。</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211002215934037.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211002215934037"></p><p>在返回值类型为String的方法下会报错（丢失返回值语句），即需要我们写一个返回String类型的结果。代码：<code>return &quot;这是String类型的返回结果&quot;;</code></p>   <pre class="line-numbers language-java" data-language="java"><code class="language-java">stu<span class="token punctuation">.</span><span class="token function">aaa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">aaa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211002220859450.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211002220859450"></p><p>如上图所示：调用aaa()方法，不会返回String类型的结果。</p><p>而输出打印aaa()方法的话，不仅会有aaa()方法的输出语句，还会有其String类型的返回结果。</p>   <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> res <span class="token operator">=</span> stu<span class="token punctuation">.</span><span class="token function">aaa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211002222252672.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211002222252672"></p><p>如上图所示：声明一个String类型的<code>res</code>变量，用来接收aaa()方法的返回结果。</p><blockquote><p>注：用户是否能接受到返回信息取决于是否需要给用户返回一个结果，而是否需要给用户返回一个结果取决于是否需要设置一个<code>res</code>(”结果“的变量)。</p></blockquote></li></ul><p>练习：创建一个JudgeAge类，根据年龄返回不同的字符串。</p><p>创建JudgeAge类：</p>   <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JudgeAge</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">suanMing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入你的年龄："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> age <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> res <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>age <span class="token operator">&lt;</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            res <span class="token operator">=</span> <span class="token string">"男儿志在四方！"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>age <span class="token operator">>=</span><span class="token number">18</span> <span class="token operator">&amp;&amp;</span> age <span class="token operator">&lt;</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            res <span class="token operator">=</span> <span class="token string">"再不疯狂，我们就老了！"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            res <span class="token operator">=</span> <span class="token string">"谁还不是个宝宝呢！"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建TestJudeAge类：</p>   <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestJudeAge</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">JudgeAge</span> jud <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JudgeAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jud<span class="token punctuation">.</span><span class="token function">suanMing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211002225545303.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211002225545303"></p><p>如果是这样，则没有返回的字符串，因为我们没有设置返回结果的变量，只是调用了suanMing()方法，并没有选择去接收我们return的结果。</p>   <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> res <span class="token operator">=</span> jud<span class="token punctuation">.</span><span class="token function">suanMing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211002225230631.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211002225230631"></p><p>设置一个返回结果的变量，输出就没毛病了。</p>   <pre class="line-numbers language-java" data-language="java"><code class="language-java">jud<span class="token punctuation">.</span><span class="token function">suanMing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jud<span class="token punctuation">.</span><span class="token function">suanMing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211002230034718.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211002230034718"></p><p>显然，这种输出方式使同一个语句出现两次重复了。</p><p>   <strong>总结</strong>：可以想到上网购物下单成功后给你提供一个“下单成功”的返回结果。</p><ol start="3"><li><p>方法名：</p><p>符合驼峰规则。字母、下划线、$、数字，数字不能开头。</p></li><li><p>参数列表：</p><ul><li><p>在方法的定义中，括号里的出现的参数(形式参数）。形参个数不固定，也可以没有。<font color = #ff0000>只能在此方法内部使用。</font></p></li><li><p>在调用方法的时候们必须提供参数的个数，顺序，数据类型完全一致的参数。这时的参数叫实参(实际参数)。</p></li></ul><p>练习：创建计算器类完成简单计算。</p><ul><li><p>创建Calc类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Calc</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//加法运算</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">double</span> a<span class="token punctuation">,</span><span class="token keyword">double</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">double</span> res <span class="token operator">=</span> a<span class="token operator">+</span>b<span class="token punctuation">;</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//减法运算</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">minus</span><span class="token punctuation">(</span><span class="token keyword">double</span> x<span class="token punctuation">,</span><span class="token keyword">double</span> y<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">double</span> res <span class="token operator">=</span> x<span class="token operator">-</span>y<span class="token punctuation">;</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//乘法运算</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">mcl</span><span class="token punctuation">(</span><span class="token keyword">double</span> c<span class="token punctuation">,</span><span class="token keyword">double</span> d<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">double</span> res <span class="token operator">=</span> c<span class="token operator">*</span>d<span class="token punctuation">;</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//除法运算</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token keyword">double</span> m<span class="token punctuation">,</span><span class="token keyword">double</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">double</span> res <span class="token operator">=</span> m<span class="token operator">/</span>n<span class="token punctuation">;</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建测试类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestCalc</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Calc</span> calc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Calc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入第一个数字："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> a <span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入第二个数字："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> b <span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请选择运算符号:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> str <span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//也可以用switch语句</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"+"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">double</span> res <span class="token operator">=</span> calc<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token string">"+"</span><span class="token operator">+</span>b<span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">double</span> res <span class="token operator">=</span> calc<span class="token punctuation">.</span><span class="token function">minus</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token string">"-"</span><span class="token operator">+</span>b<span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">double</span> res <span class="token operator">=</span> calc<span class="token punctuation">.</span><span class="token function">mcl</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token string">"*"</span><span class="token operator">+</span>b<span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">double</span> res <span class="token operator">=</span> calc<span class="token punctuation">.</span><span class="token function">divide</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span>b<span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>方法签名：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//方法名+参数列表叫做方法签名</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">double</span> a<span class="token punctuation">,</span><span class="token keyword">double</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">double</span> <span class="token function">minus</span><span class="token punctuation">(</span><span class="token keyword">double</span> x<span class="token punctuation">,</span><span class="token keyword">double</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">double</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token keyword">double</span> m<span class="token punctuation">,</span><span class="token keyword">double</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//同名不同参</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">double</span> a<span class="token punctuation">,</span><span class="token keyword">double</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">double</span> a<span class="token punctuation">,</span><span class="token keyword">double</span> b<span class="token punctuation">,</span><span class="token keyword">double</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在同一个类中，不允许出现方法签名相同的方法。</p></blockquote></li><li><p>方法的<strong>重载</strong>(overload)：方法名相同，参数列表不同的一组方法。与返回值无关。（即：**<font color = #ff0000>同一个类中</font>**，同名不同参），同一个类中的方法就可以同时存在。</p><blockquote><p>典型应用：构造方法重载、<code>System.out.printlln();</code></p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20220208170336229.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20220208170336229"></p></blockquote></li><li><p>变量的作用域：</p><ul><li>全局变量：类中在方法之外定义的变量。全局变量可以在当前类或其它类中被使用。</li><li>局部变量：在方法内部声明的变量，只能在方法内部使用。形参也属于局部变量。<font color = #ff0000> 注意：局部变量未初始化不能使用。</font></li></ul><blockquote><p>可以理解为自己的大名和小名。</p></blockquote></li><li><p>值传递</p><ul><li><p>在Java中，方法调用，如果参数为基本数据类型，那么实参传递的实际的数值。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//ValueDeliver类</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateValue</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        num <span class="token operator">=</span> num<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"updateValue方法："</span><span class="token operator">+</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//TestValueDeliver类</span><span class="token class-name">ValueDeliver</span> va <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ValueDeliver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>va<span class="token punctuation">.</span><span class="token function">updateValue</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出的是此方法中的结果：updateValue方法：10</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// a的值为5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在Java中，方法调用，如果参数为引用数据类型，那么实参传递的是引用值（内存地址）。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//Account类</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Account</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> cou_num <span class="token operator">=</span> <span class="token number">1001</span><span class="token punctuation">;</span><span class="token comment">//账户编号</span>    <span class="token class-name">String</span> user_name <span class="token operator">=</span> <span class="token string">"test"</span><span class="token punctuation">;</span><span class="token comment">//用户名</span>    <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">"test"</span><span class="token punctuation">;</span><span class="token comment">//密码</span>    <span class="token keyword">double</span> yu_money <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span><span class="token comment">//余额</span><span class="token punctuation">&#125;</span><span class="token comment">//ValueDeliver类</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateAccount</span><span class="token punctuation">(</span><span class="token class-name">Account</span> account<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        account<span class="token punctuation">.</span>cou_num <span class="token operator">=</span> <span class="token number">2002</span><span class="token punctuation">;</span>        account<span class="token punctuation">.</span>user_name <span class="token operator">=</span> <span class="token string">"adm"</span><span class="token punctuation">;</span>        account<span class="token punctuation">.</span>password <span class="token operator">=</span> <span class="token string">"123"</span><span class="token punctuation">;</span>        account<span class="token punctuation">.</span>yu_money <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//TestValueDeliver类</span><span class="token class-name">ValueDeliver</span> va <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ValueDeliver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Account</span> account <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//调用Account类的变量，原样输出，值没变。</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span>cou_num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//1001</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span>user_name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//"test"</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//"test"</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span>yu_money<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//1234</span>        <span class="token comment">//不管怎么传递，account对象在内存中只有一份，方法内操作对象，（内存空间相当于一个盒子）</span>        <span class="token comment">//首先，需要在内存中找到这个对象然后操作。</span>        va<span class="token punctuation">.</span><span class="token function">updateAccount</span><span class="token punctuation">(</span>account<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//调用了updateAccount方法，值发生改变。</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span>cou_num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//2002</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span>user_name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//"adm"</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//"123"</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span>yu_money<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//123</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>值传递模型</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/%E5%80%BC%E4%BC%A0%E9%80%92%E6%A8%A1%E5%9E%8B.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="值传递模型"></p></li></ul></li><li><p><font color ="#ff0000"><strong>Java对象的内存管理机制</strong></font></p><p>首先回顾下Java内存的模型：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20211107151323013.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211107151323013"></p><ol><li>使用new创建对象，则会在堆内存中开辟新的空间和初始化。</li><li>方法执行完毕返回，栈内存自动释放，局部变量销毁（此时堆中的对象还存在，只是没有任何变量来指向这个对象）。</li><li>如果堆内存中的对象没有被变量引用，就会变成垃圾，此时由垃圾回收器回收，释放所占的堆内存。</li><li>被回收的对象：<ul><li>不再被任何变量引用的对象</li><li>引用变量自动放弃</li><li>认为将引用变量置为null</li></ul></li><li><code>System.gc();</code>手动调用垃圾回收机制。但还有个问题，此方法执行之后，何时扫描，合适会回收，用户无法干预，他有自己的算法。</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java数组</title>
      <link href="/post/java-shu-zu/"/>
      <url>/post/java-shu-zu/</url>
      
        <content type="html"><![CDATA[<h2 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h2><ol><li><p>定义：</p><ul><li>声明一个==变量==就是在内存空间划出==一块合适的空间==。</li><li>声明一个==数组==就是内存空间划出==一串连续的空间==。</li><li>数组是一个变量，数组也是一个==引用数据类型的容器==，同时也可以存储==相同数据类型==的==一组数据==。如：1、”张三”，”李四”，”王五”=&gt;String类型。2、8，89，”c”=&gt;啥也不是，里面的类型不都相同。</li><li>数组的长度是==固定==不变，为了避免数组越界。</li></ul></li><li><p>语法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//1、数据类型[] 数组名 = new 数据类型[元素个数];</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//声明了一个长度为10的容器</span><span class="token comment">//2、数据类型[] 数组名 = &#123;元素1,元素2,元素3...&#125;;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//3、数据类型[] 数组名 = new 数据类型[]&#123;元素1,元素2,元素3...&#125;;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>数组基本要素</p><ul><li><p>标识符：数组名称，用于区分不同的数组。如：a[]、b[]等。</p></li><li><p>数组元素：向数组中存放的数据，如：a[1,2,3,4]。</p></li><li><p>元素下标：对数组元素进行编号，从0开始，==数组中的每个元素都可以通过下标来访问==。</p><p>注意：数组下标的范围：==0&lt;=a[i]&lt;=a. length-1==</p></li><li><p>元素类型：数组元素的数据类型，如：int a[]、float b[]等。</p></li></ul></li><li><p>使用数组四步走：</p><ul><li>声明数组     int[] a;</li><li>分配空间     a = new int[5];</li><li>赋值             a[0] = 8;</li><li>处理数据     a[0] = a[0]*10;</li></ul></li><li><p>数组的初始化：声明一个数组时仅为数组指定了数组名和元素的数据类型，并未指定数组元素的个数，因此系统无法为数组分配存储空间。而==给数组分配存储空间的过程==就是数组的初始化。</p><ul><li><p>用new初始化数组：只指定数组的元素个数，为数组分配存储空间，并不给数组元素赋初值。</p><ul><li><p>先声明数组在初始化：</p><p>格式如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//数据类型[] 数组名 ;</span><span class="token comment">//数组名 = new 数据类型[元素个数];</span><span class="token comment">//注意：数组元素不确定</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p> 例：要表示10个学生的成绩</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> score<span class="token punctuation">;</span>score <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>声明的同时进行初始化：</p><p>格式如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//数据类型[] 数组名 = new 数据类型[元素个数];</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例：要表示10个学生的成绩</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> score <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>赋初值初始化数组：可以在声明数组的同时给数组元素赋初值，==所赋初值的个数决定数组元素的数目==。</p><p>格式如下：</p>  <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//数据类型[] 数组名 = &#123;元素1,元素2,元素3...&#125;;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例：要表示10个学生的成绩</p>  <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> score <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//length属性可以获取数组长度</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>score<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>结合以上两种方法，可以得到：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//数据类型[] 数组名 = new 数据类型[]&#123;元素1,元素2,元素3...&#125;;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> score <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>练习一：动态接收未给元素初始化的数组:动态从键盘输入三个数字，接着打印出来。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo06</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入第"</span><span class="token operator">+</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"个数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//两个for不受影响</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>练习二：</p><p>有一个数列: 8, 4, 2, 1, 23, 344, 12。<br>➢循环输出数列的值；<br>➢求数列中所有数值的和；<br>➢猜数游戏:从键盘中任意输入一个数据，判断数列中是否包含此数。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo07</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">344</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            sum<span class="token operator">+=</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"数列中所有数值的和"</span><span class="token operator">+</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入一个数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> num <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//设置一个布尔值</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">==</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                flag <span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//满足num==arr[i]，则flag变为true</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//在for循环的外边</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您输入的"</span><span class="token operator">+</span>num<span class="token operator">+</span><span class="token string">":包含"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您输入的"</span><span class="token operator">+</span>num<span class="token operator">+</span><span class="token string">":不包含"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>练习三:有数组1,2,3,4,5,6。将数组中的元素顺序进行颠倒</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo08</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>j <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">,</span>j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>分析如图所示：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210429180545963.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210429180545963"></p><p><strong>注</strong>：但是在数组元素进行颠倒时，如果用<code>i&lt;arr.length</code>判断：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>j <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">,</span>j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"temp:"</span><span class="token operator">+</span>temp<span class="token operator">+</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"j:"</span><span class="token operator">+</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"i:"</span><span class="token operator">+</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>三角替换会出现替换2次，就导致顺序没变。结果如图：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210429173104779.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210429173104779"></p></li><li><p><strong>冒泡排序</strong>(Bubble Sort)，是一种计算机科学领域的较简单的排序算法。重复地走访要排序的元素，依次比较两个相邻的元素，如果顺序错误就把他们交换过来,直到所有元素有序。将最大的数沉到最底下 ,等到下一轮就是数组总数少1。其中，==排序次数=数组总数-1==。在写算法的过程中：先写出一轮的排序，再把一轮的放入到总的循环里。算法优化：在内层循环中判断条件比外层循环少1，即：==内层&lt;外层-1==。</p><ul><li>练习四：没有顺序的数组6,3,1,7,30,78,11。从小到大排序</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo09</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> temp <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">//外层：控制比较轮数也就是数字移动次数，即：arr.length-1(数组长度-1)</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//内层：控制每轮数字的比较次数，即：arr.length-1-j(数组长度-1-循环轮数)</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>j<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">></span>arr<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    arr<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>优化后：没有优化前比较了21次。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo09</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> temp<span class="token punctuation">;</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//记录比较的次数</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>j<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">></span>arr<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    arr<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>                    flag <span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                count<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[1, 3, 6, 7, 30, 78, 11]</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"比较了："</span><span class="token operator">+</span>count<span class="token operator">+</span><span class="token string">"次"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//比较了：10次</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><ol><li><p>二维数组：可以简单理解为存储一维数组的数组(容器)。</p></li><li><p>语法格式：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//1、数据类型 [][] 数组名 = new 数据类型[x][y];</span><span class="token comment">//x => 这个二维数组中多少个一维数组，行;</span><span class="token comment">//y => 当前一维数组中有多少个元素，列;</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//2、数据类型 [][] 数组名 = new 数据类型[][]&#123;&#123;元素1,元素2,...&#125;,&#123;元素1,元素2,...&#125;,...&#125;;</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//每一个括号都是一个数组，可以看成是3*3的数组。</span><span class="token comment">//3、数据类型 [][] 数组名 = &#123;&#123;元素1,元素2,...&#125;,&#123;元素1,元素2,...&#125;,...&#125;;</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210718165205932.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210718165205932"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//如果要抓取数字2，则需要进行下标检索。</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>遍历二维数组</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">//控制行的遍历，arr.length</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//控制列的遍历，arr[i].length</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>练习：第一季度销售数据：50,77,10；第二季度销售数据：66,17,33；第三季度销售数据：54,77,11；第四季度销售数据：72,22,41。求公司一年的销售总额。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                sum <span class="token operator">=</span> sum <span class="token operator">+</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"一年的销售总额："</span><span class="token operator">+</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>练习：循环录入4名学生的成绩，然后从小到大的顺序输出成绩。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo03_1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//录入学生成绩</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> scores <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> scores<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入第"</span><span class="token operator">+</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"名学生成绩"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//遍历输出学生成绩</span>       <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> scores<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> scores<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>j<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> scores<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">int</span> temp <span class="token operator">=</span> scores<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    scores<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//方法二：面向对象中的排序</span>        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//面向对象中的排序</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> scores<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java流程控制-循环结构（二）</title>
      <link href="/post/java-liu-cheng-kong-zhi-xun-huan-jie-gou-er/"/>
      <url>/post/java-liu-cheng-kong-zhi-xun-huan-jie-gou-er/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在学完循环语句后，还需要大量的练习。此篇为练习题，练习题的篇幅有些长。</p><h1 id="一、if语句"><a href="#一、if语句" class="headerlink" title="一、if语句"></a>一、if语句</h1><h2 id="1-由键盘输入三个整数分别存入变量num1、num2、-num3，-对它们进行排序-使用if-else-，并且从小到大输出。"><a href="#1-由键盘输入三个整数分别存入变量num1、num2、-num3，-对它们进行排序-使用if-else-，并且从小到大输出。" class="headerlink" title="1. 由键盘输入三个整数分别存入变量num1、num2、 num3， 对它们进行排序(使用if-else)，并且从小到大输出。"></a>1. 由键盘输入三个整数分别存入变量num1、num2、 num3， 对它们进行排序(使用if-else)，并且从小到大输出。</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo05_3</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"please enter first numbers :"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> num1 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"please enter second numbers :"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> num2 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"please enter third numbers :"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> num3 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> temp<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>num1 <span class="token operator">></span> num2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//num1先和num2比较，做三角替换，使num1最小</span>            temp <span class="token operator">=</span> num1<span class="token punctuation">;</span>            num1 <span class="token operator">=</span> num2<span class="token punctuation">;</span>            num2 <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>num1 <span class="token operator">></span> num3<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//num1先和num3比较，做三角替换，使num1最小</span>            temp <span class="token operator">=</span> num1<span class="token punctuation">;</span>            num1 <span class="token operator">=</span> num3<span class="token punctuation">;</span>            num3 <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>num2 <span class="token operator">></span> num3<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//num2先和num3比较，做三角替换，使num2比num3小</span>            temp <span class="token operator">=</span> num2<span class="token punctuation">;</span>            num2 <span class="token operator">=</span> num3<span class="token punctuation">;</span>            num3 <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"排序后的结果是："</span><span class="token operator">+</span>num1<span class="token operator">+</span><span class="token string">"&lt;="</span><span class="token operator">+</span>num2<span class="token operator">+</span><span class="token string">"&lt;="</span><span class="token operator">+</span>num3<span class="token punctuation">)</span><span class="token punctuation">;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="二、while语句及do…while语句"><a href="#二、while语句及do…while语句" class="headerlink" title="二、while语句及do…while语句"></a>二、while语句及do…while语句</h1><h2 id="1-小明每天检查自己的学习Java计划是否达标，如果不达标，则继续进行。小明给自己安排的每天的学习Java任务为-上午学习视频-下午学习视频。-while语句"><a href="#1-小明每天检查自己的学习Java计划是否达标，如果不达标，则继续进行。小明给自己安排的每天的学习Java任务为-上午学习视频-下午学习视频。-while语句" class="headerlink" title="1. 小明每天检查自己的学习Java计划是否达标，如果不达标，则继续进行。小明给自己安排的每天的学习Java任务为:上午学习视频,下午学习视频。(while语句)"></a>1. 小明每天检查自己的学习Java计划是否达标，如果不达标，则继续进行。小明给自己安排的每天的学习Java任务为:上午学习视频,下午学习视频。(while语句)</h2><pre class="line-numbers language-note" data-language="note"><code class="language-note">思路：1. 是否存在重复操作2. 使用while循环实现   1. 确定循环条件和循环体   2. 套用while语法写出代码   3. 检查循环是否能够退出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo07</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"今天学习Java了吗？(y/n):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> answer <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//输入的值如果不为y，则执行循环体。</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">"y"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"上午学习视频！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"下午学习视频！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"合格了吗？(y/n):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//加入结束循环的条件。</span>            answer <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"完成今日学习！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        input<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-小明报名了某声音选秀节目，请了专业老师指导学习，老师安排早上练声，上午练钢琴，下午练习唱歌。老师严格把关，只要老师说”很棒“，小明才可以停止学习任务，否则一直持续学习计划，请用java编程描述这件事情。-do…while语句"><a href="#2-小明报名了某声音选秀节目，请了专业老师指导学习，老师安排早上练声，上午练钢琴，下午练习唱歌。老师严格把关，只要老师说”很棒“，小明才可以停止学习任务，否则一直持续学习计划，请用java编程描述这件事情。-do…while语句" class="headerlink" title="2. 小明报名了某声音选秀节目，请了专业老师指导学习，老师安排早上练声，上午练钢琴，下午练习唱歌。老师严格把关，只要老师说”很棒“，小明才可以停止学习任务，否则一直持续学习计划，请用java编程描述这件事情。(do…while语句)"></a>2. 小明报名了某声音选秀节目，请了专业老师指导学习，老师安排早上练声，上午练钢琴，下午练习唱歌。老师严格把关，只要老师说”很棒“，小明才可以停止学习任务，否则一直持续学习计划，请用java编程描述这件事情。(do…while语句)</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo09</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span>  answer<span class="token punctuation">;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"早上完成练声"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"上午完成练钢琴"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"下午完成练习唱歌"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"是不是很棒？(y/n):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            answer <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">"y"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"今天已学习！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        input<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>==tips:当判断语句不成立时，do…while语句比while语句多执行一次。==</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DoWhileDemo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//没有输出结果</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出结果为0</span>        <span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-求1-50中7的倍数之和"><a href="#3-求1-50中7的倍数之和" class="headerlink" title="3. 求1-50中7的倍数之和"></a>3. 求1-50中7的倍数之和</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo10</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            sum <span class="token operator">=</span> sum <span class="token operator">+</span> i<span class="token punctuation">;</span>            i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"1-50中7的倍数之和:"</span><span class="token operator">+</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1-50中7的倍数之和:196</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="三、switch-case语句"><a href="#三、switch-case语句" class="headerlink" title="三、switch-case语句"></a>三、switch-case语句</h1><h2 id="1-用switch-case语句完成3，4，5春季；6，7，8夏季；9，10，11秋季；12，1，2-冬季"><a href="#1-用switch-case语句完成3，4，5春季；6，7，8夏季；9，10，11秋季；12，1，2-冬季" class="headerlink" title="1.用switch-case语句完成3，4，5春季；6，7，8夏季；9，10，11秋季；12，1，2 冬季"></a>1.用switch-case语句完成3，4，5春季；6，7，8夏季；9，10，11秋季；12，1，2 冬季</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入月份："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> month <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span><span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"春季"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"夏季"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">10</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">11</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"秋季"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">12</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"冬季"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        input<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-使用switch将小写转换为大写。只转换a-b-c-d-e-其余为“other”。"><a href="#2-使用switch将小写转换为大写。只转换a-b-c-d-e-其余为“other”。" class="headerlink" title="2. 使用switch将小写转换为大写。只转换a,b,c,d,e,其余为“other”。"></a>2. 使用switch将小写转换为大写。只转换a,b,c,d,e,其余为“other”。</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo03</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入26个英文小写字母："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> cha <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>cha<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//方法一</span>            <span class="token keyword">case</span> <span class="token string">"a"</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"b"</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"c"</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"C"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"d"</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"D"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"e"</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"E"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token comment">//方法二</span>                <span class="token keyword">case</span> <span class="token string">"a"</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token string">"b"</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token string">"c"</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token string">"d"</span><span class="token operator">:</span>            <span class="token keyword">case</span> <span class="token string">"e"</span><span class="token operator">:</span>                <span class="token comment">//toUpperCase()是String类下的转换大小写的方法</span>              <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cha<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"other"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        input<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>==tips:<code>toUpperCase()</code>是String类下的转换大小写的方法。==</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210415183730999.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210415183730999"></p><h1 id="四、for循环"><a href="#四、for循环" class="headerlink" title="四、for循环"></a>四、for循环</h1><h2 id="1-循环输入小明考试的5门课成绩，并计算平均分。"><a href="#1-循环输入小明考试的5门课成绩，并计算平均分。" class="headerlink" title="1. 循环输入小明考试的5门课成绩，并计算平均分。"></a>1. 循环输入小明考试的5门课成绩，并计算平均分。</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo12</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> score<span class="token punctuation">;</span><span class="token comment">//课程成绩</span>        <span class="token keyword">double</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//课程成绩的总和</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入第"</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">"次课程成绩："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            score <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sum <span class="token operator">=</span> sum<span class="token operator">+</span>score<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"五科的平均成绩为："</span><span class="token operator">+</span><span class="token punctuation">(</span>sum<span class="token operator">/</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        input<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-完成一个加法操作，结果如图："><a href="#2-完成一个加法操作，结果如图：" class="headerlink" title="2. 完成一个加法操作，结果如图："></a>2. 完成一个加法操作，结果如图：</h2><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210417211447619.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210417211447619"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo13</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入一个数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> str <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//方法一</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> str<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//这道题不需要双层嵌套。逻辑可以理解为“加数+加数=和”</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">"+"</span><span class="token operator">+</span><span class="token punctuation">(</span>str<span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//方法二</span>        <span class="token comment">//for循环可以同时定义变量，用逗号隔开。</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>j <span class="token operator">=</span> str<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> str<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">,</span>j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">"+"</span><span class="token operator">+</span>j<span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span><span class="token punctuation">(</span>i<span class="token operator">+</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        input<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-1-100之间不能被3整除的数之和"><a href="#3-1-100之间不能被3整除的数之和" class="headerlink" title="3. 1~100之间不能被3整除的数之和"></a>3. 1~100之间不能被3整除的数之和</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo14</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                sum <span class="token operator">=</span> sum <span class="token operator">+</span> i<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"1~100之间不能被3整除的数之和:"</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//sum=3367</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-本金10000元存入银行，年利率是千分之三。每过1年-将本金和利息相加作为新的本金。计算5年后，获得的本金是多少？"><a href="#4-本金10000元存入银行，年利率是千分之三。每过1年-将本金和利息相加作为新的本金。计算5年后，获得的本金是多少？" class="headerlink" title="4. 本金10000元存入银行，年利率是千分之三。每过1年,将本金和利息相加作为新的本金。计算5年后，获得的本金是多少？"></a>4. 本金10000元存入银行，年利率是千分之三。每过1年,将本金和利息相加作为新的本金。计算5年后，获得的本金是多少？</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo15</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">double</span> money <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span><span class="token comment">//本金</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//每过1年,将本金和利息相加作为新的本金。</span>            <span class="token comment">// money=money+money*0.03=money*(1+0.003);</span>            money <span class="token operator">*=</span> <span class="token number">1</span><span class="token operator">+</span><span class="token number">0.003</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"5年后，获得的本金是:"</span><span class="token operator">+</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//本金是:10150.902704052423</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-练习4拓展：输入本金和年份，计算最后获得的本金。"><a href="#5-练习4拓展：输入本金和年份，计算最后获得的本金。" class="headerlink" title="5.练习4拓展：输入本金和年份，计算最后获得的本金。"></a>5.练习4拓展：输入本金和年份，计算最后获得的本金。</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo15</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入您的本金："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> money <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//本金</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入您要存的年份："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> day <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//经过的年份</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> day<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//每过1年,将本金和利息相加作为新的本金。</span>            <span class="token comment">// money=money+money*0.03=money*(1+0.003);</span>            money <span class="token operator">*=</span> <span class="token number">1</span><span class="token operator">+</span><span class="token number">0.003</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>day<span class="token operator">+</span><span class="token string">"年后，您获得的本金是:"</span><span class="token operator">+</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果如图：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210417225244782.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210417225244782"></p><h1 id="五、双重for循环"><a href="#五、双重for循环" class="headerlink" title="五、双重for循环"></a>五、双重for循环</h1><h2 id="1-打印出一个倒三角"><a href="#1-打印出一个倒三角" class="headerlink" title="1. 打印出一个倒三角"></a>1. 打印出一个倒三角</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo04</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> j <span class="token operator">>=</span> i<span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果如图：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210420220721085.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210420220721085"></p><h2 id="2-打印一个有规律的倒三角"><a href="#2-打印一个有规律的倒三角" class="headerlink" title="2.打印一个有规律的倒三角"></a>2.打印一个有规律的倒三角</h2><p>效果如图：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210421160724530.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210421160724530"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo05</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//这里从0开始逐级递增，并且判断条件需要小于5</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//这里从0开始逐级递增，并且判断条件需要小于9-2*i</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>思维误区：当时看到奇数递减，只想到了在j-=2；上着手，结果没想到是从内层循环的判断条件开始找规律。换个思路，若我非要从1开始逐级递减呢？(其实我也可以从0开始)</strong></p><p>==<strong>正向思维：1、3、5、7、9-&gt;2n+1;</strong>==</p><p>==<strong>逆向思维：9、7、5、3、1-&gt;2n-1；</strong>==</p><p> ==<strong>从1开始：即2n-1；n=5；</strong>==</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo05</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//这里从5开始逐级递减，并且判断条件需要大于等于1</span>        <span class="token comment">// i >= 1; ==>  i > 0;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> i <span class="token operator">>=</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//这里从1开始所以判断条件需要小于等于(2*i-1)</span>            <span class="token comment">// int j = 1;    ==>  int j = 0;</span>            <span class="token comment">// j &lt;= (2*i-1); ==>  j &lt; (2*i-1);</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-打印一个等腰三角形"><a href="#3-打印一个等腰三角形" class="headerlink" title="3. 打印一个等腰三角形"></a>3. 打印一个等腰三角形</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo04</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//看成是5*9的矩形。</span>        <span class="token comment">//控制行数：5行</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//控制空格：空格第一层开始是4个，逐级递减。</span>            <span class="token comment">//用1表示清晰可观。</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> k <span class="token operator">></span> i <span class="token punctuation">;</span> k<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">//控制*号：1、3、5正向递增，即：2*i+1；</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果如图：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210421170920611.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210421170920611"></p><h2 id="4-打印一个倒等腰三角形"><a href="#4-打印一个倒等腰三角形" class="headerlink" title="4. 打印一个倒等腰三角形"></a>4. 打印一个倒等腰三角形</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo04</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//看成是5*9的矩形。</span>        <span class="token comment">//控制行数：5行</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//控制空格：空格第一层开始是0个，逐级递增。</span>            <span class="token comment">//用1表示清晰可观。</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> i <span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">//控制*号：9、7、5逆向递减，即：9-2*i；</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token punctuation">(</span><span class="token number">9</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果如图：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210421174545859.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210421174545859"></p><h1 id="六、综合练习"><a href="#六、综合练习" class="headerlink" title="六、综合练习"></a>六、综合练习</h1><h2 id="1-写出一个商品查询系统"><a href="#1-写出一个商品查询系统" class="headerlink" title="1. 写出一个商品查询系统"></a>1. 写出一个商品查询系统</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo11</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"欢迎使用****商品查询系统"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> str<span class="token punctuation">;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入商品查询编号："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"1.铅笔"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"2.钢笔"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"3.橡皮"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"n.退出"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            str <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">case</span> <span class="token string">"1"</span><span class="token operator">:</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"铅笔：1元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">"2"</span><span class="token operator">:</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"钢笔：5元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">"3"</span><span class="token operator">:</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"橡皮：0.5元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"n"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"感谢使用!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//永真条件</span>        input<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>==注：break：终止当前break所在层级的结构语句，如：switch或循环语句。==</p><h2 id="2-循环录入Java课的学生成绩，统计分数大于等于80分的学生比例。"><a href="#2-循环录入Java课的学生成绩，统计分数大于等于80分的学生比例。" class="headerlink" title="2. 循环录入Java课的学生成绩，统计分数大于等于80分的学生比例。"></a>2. 循环录入Java课的学生成绩，统计分数大于等于80分的学生比例。</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo17</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入班级总人数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> num <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//班级总人数</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//80分以上的学生</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"请输入第"</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">"位学生的成绩："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> score <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//学生的成绩</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">&lt;=</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>               <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"80分以上的学生有："</span><span class="token operator">+</span>count<span class="token operator">+</span><span class="token string">"位"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"80分以上的比例是："</span><span class="token operator">+</span><span class="token punctuation">(</span>count<span class="token operator">/</span>num<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        input<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果如图：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210418200312678.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210418200312678"></p><h2 id="3-猴子第一天摘下N个桃子，当时就吃了一半，还不过瘾，就又吃了一个。第二天又将剩下的桃子吃掉一半，又多吃了一个。以后每天都吃前一天剩下的一半零一个到第10天在想吃的时候就剩一个桃子了，求第一天共摘下来多少个桃子？"><a href="#3-猴子第一天摘下N个桃子，当时就吃了一半，还不过瘾，就又吃了一个。第二天又将剩下的桃子吃掉一半，又多吃了一个。以后每天都吃前一天剩下的一半零一个到第10天在想吃的时候就剩一个桃子了，求第一天共摘下来多少个桃子？" class="headerlink" title="3. 猴子第一天摘下N个桃子，当时就吃了一半，还不过瘾，就又吃了一个。第二天又将剩下的桃子吃掉一半，又多吃了一个。以后每天都吃前一天剩下的一半零一个到第10天在想吃的时候就剩一个桃子了，求第一天共摘下来多少个桃子？"></a>3. 猴子第一天摘下N个桃子，当时就吃了一半，还不过瘾，就又吃了一个。第二天又将剩下的桃子吃掉一半，又多吃了一个。以后每天都吃前一天剩下的一半零一个到第10天在想吃的时候就剩一个桃子了，求第一天共摘下来多少个桃子？</h2><pre class="line-numbers language-note" data-language="note"><code class="language-note">思路：1、循环条件：已知第十天的数，求第一天的量。即可以用到自减的for循环2、循环体：重复做的就是吃昨天的一半在加一，即：今天&#x3D;昨天&#x2F;2-1，也就是昨天&#x3D;（今天+1）*2。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> day<span class="token punctuation">;</span><span class="token comment">//天数</span>        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//刚开始桃子数量</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>day <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> day <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">;</span> day<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            sum <span class="token operator">=</span> <span class="token punctuation">(</span>sum<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第一天共摘下来"</span><span class="token operator">+</span>sum<span class="token operator">+</span><span class="token string">"个桃子"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//sum=1534</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-今有雉免同笼，上有三十五头，-下有九十四足，问雉兔各几何"><a href="#4-今有雉免同笼，上有三十五头，-下有九十四足，问雉兔各几何" class="headerlink" title="4. 今有雉免同笼，上有三十五头， 下有九十四足，问雉兔各几何?"></a>4. 今有雉免同笼，上有三十五头， 下有九十四足，问雉兔各几何?</h2><pre class="line-numbers language-note" data-language="note"><code class="language-note">思路：1、上有三十五头:chock+rabbit&#x3D;352、下有九十四足:chock*2+rabbit*4&#x3D;94<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> chook<span class="token punctuation">;</span><span class="token comment">//表示鸡</span>        <span class="token keyword">int</span> rabbit<span class="token punctuation">;</span><span class="token comment">//表示兔</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span> chook <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> chook <span class="token operator">&lt;=</span> <span class="token number">35</span><span class="token punctuation">;</span> chook<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            rabbit <span class="token operator">=</span> <span class="token number">35</span><span class="token operator">-</span>chook<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>chook<span class="token operator">*</span><span class="token number">2</span><span class="token operator">+</span>rabbit<span class="token operator">*</span><span class="token number">4</span><span class="token operator">==</span><span class="token number">94</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"兔子："</span><span class="token operator">+</span>rabbit<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//兔子：12</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"鸡："</span><span class="token operator">+</span>chook<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//鸡：23</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-小明2015年每月工资2500圆，每年增长25-，请问按此增长速度，到哪一年能达到将达到1万元"><a href="#5-小明2015年每月工资2500圆，每年增长25-，请问按此增长速度，到哪一年能达到将达到1万元" class="headerlink" title="5. 小明2015年每月工资2500圆，每年增长25%，请问按此增长速度，到哪一年能达到将达到1万元?"></a>5. 小明2015年每月工资2500圆，每年增长25%，请问按此增长速度，到哪一年能达到将达到1万元?</h2><pre class="line-numbers language-note" data-language="note"><code class="language-note">思路：1、一月工资：2500；第二年增长25%的工资：(1+0.25)*25002、while语句，if是条件语句，所以不能选择if来做此题。3、循环体：(1+0.25)*money;4、循环条件：money&lt;&#x3D;10000;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo03</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> year <span class="token operator">=</span> <span class="token number">2015</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> money <span class="token operator">=</span> <span class="token number">2500</span><span class="token punctuation">;</span><span class="token comment">//涉及到增长率所以考虑double类型。</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>money<span class="token operator">&lt;=</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            money <span class="token operator">*=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span><span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            year<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"到"</span><span class="token operator">+</span>year<span class="token operator">+</span><span class="token string">"年能达到就达到1万圆"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//year=2022</span>        <span class="token comment">//注意：if是条件语句，所以不能选择if来做此题。</span><span class="token comment">//        if (money&lt;=10000)&#123;</span><span class="token comment">//            money *= (1+0.25);</span><span class="token comment">//            year++;</span><span class="token comment">//        &#125;</span><span class="token comment">//        System.out.println("到"+year+"年能达到就达到1万圆");//year=2016</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这么长时间做了整理，好多题都看着陌生了。对于一些细节还有思维的转变，我还没有吃透。日后加以努力！</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 练习 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java流程控制-循环结构（一）</title>
      <link href="/post/java-liu-cheng-kong-zhi-xun-huan-jie-gou-yi/"/>
      <url>/post/java-liu-cheng-kong-zhi-xun-huan-jie-gou-yi/</url>
      
        <content type="html"><![CDATA[<h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h2><ol><li><p>if单选择结构</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>struct</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IfDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//if单选择结构：从上而下执行。</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入内容："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> s <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//equals:判断字符串是否相等。判断字符串不要用=号。</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"End"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20200918204223032.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200918204223032"></p></li><li><p>if双选择结构：判断学生成绩成绩60分以上合格，60分以下不合格</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>struct</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IfDemo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入成绩："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> score <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>score<span class="token operator">>=</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成绩合格"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成绩不合格"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>if多选择结构</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20200918210131730.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200918210131730"></p><p>练习：将成绩划分A–D五个等级</p>   <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>struct</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IfDemo03</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入成绩："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> score <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>score<span class="token operator">==</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜满分"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>score<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>score<span class="token operator">>=</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"A级"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>score<span class="token operator">&lt;</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>score<span class="token operator">>=</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"B级"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>score<span class="token operator">&lt;</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>score<span class="token operator">>=</span><span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"C级"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>score<span class="token operator">&lt;</span><span class="token number">70</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>score<span class="token operator">>=</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"D级"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token comment">//为了程序的严谨需要给定成绩的合法范围</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>score<span class="token operator">&lt;</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>score<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"A级"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成绩不合法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>==tips:一旦其中一个else if语句检测为true，其他的else if以及else语句都将跳过执行。==</p></li></ol><h2 id="switch多选择结构"><a href="#switch多选择结构" class="headerlink" title="switch多选择结构"></a>switch多选择结构</h2><ul><li><p>switch case语句判断一个变量与一系列值中某个值是否相等，每个值称为一个分支。</p></li><li><p>switch语句中的变量类型可以是：</p><ol><li><p>byte，short，int或char；</p></li><li><p>从JavaSE7开始</p></li><li><p>switch支持字符串String类型</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span></span><span class="token class-name">Switch</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwitchDemo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">"琲木木"</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token string">"大佬"</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"大佬"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"林木木"</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"林木木"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"琲木木"</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"琲木木"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"啥也不是!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>同时case标签必须为字符串常量或字面量。</p></li></ol></li><li><p>switch语句语法格式如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">switch</span><span class="token punctuation">(</span>expression<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> value <span class="token operator">:</span>        <span class="token comment">//语句</span>        <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment">//可选</span>    <span class="token keyword">case</span> value <span class="token operator">:</span>        <span class="token comment">//语句</span>        <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment">//可选</span>    <span class="token comment">//你可以有任意数量的case语句</span>    <span class="token keyword">default</span> ：<span class="token comment">//可选</span>        <span class="token comment">//语句</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>练习:成绩等级</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span></span><span class="token class-name">Switch</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwitchDemo01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">char</span> grade <span class="token operator">=</span> <span class="token string">'C'</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>grade<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//case穿透：在语句中若无breeak，程序则会一直运行下去并执行对应的case语句及以后的case语句。</span>            <span class="token comment">//switch：匹配一个具体的值。</span>            <span class="token keyword">case</span> <span class="token string">'A'</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"优秀"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'B'</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"合格"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'C'</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"良好"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'D'</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"太棒了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'E'</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"太差"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"未知等级"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>用idea查看反编译（==看源码的思想==）</p><p>由于JavaSE7后，switch支持字符串类型。但是字符串的本质还是数字，我们要查看具体运行过程则需要进行反编译。</p><ol><li><p>在项目结构中找到<code>project compiler output</code>的文件路径。</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20200919150129069.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200919150129069"></p></li><li><p>找到文件后打开后对应.class文件会发现是乱码的。</p></li><li><p>将文件拖到idea上就会看到反编译后的文件。</p></li><li><p>每一个字符都有对应的<code>hashcode</code></p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20200919153043911.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200919153043911"></p></li></ol></li></ul><h2 id="while和do…while语句"><a href="#while和do…while语句" class="headerlink" title="while和do…while语句"></a>while和do…while语句</h2><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210422153203541.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210422153203541"></p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210422153336992.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210422153336992"></p><ul><li><p>while先判断后执行</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>struct</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WhileDemo01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">&lt;=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            sum<span class="token operator">+=</span>i<span class="token punctuation">;</span>            i<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>do..while先执行后判断</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>struct</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DoWhileDemo01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            sum<span class="token operator">+=</span>i<span class="token punctuation">;</span>            i<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">&lt;=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><ul><li><p>for循环语句是支持迭代的一种通用结构，是最有效、最灵活的循环结构。</p></li><li><p>for循环执行的次数是在执行前就确定的，语法格式如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span><span class="token punctuation">(</span>初始化<span class="token punctuation">;</span>布尔表达式<span class="token punctuation">;</span>更新<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//代码语句</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210417190847028.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210417190847028"></p></li><li><p>快捷键<code>100.for</code>就会生成</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>练习1：计算1-100的奇数和偶数的和</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>struct</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForDemo01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//定义一个奇数和</span>        <span class="token keyword">int</span> oddsum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">//定义一个偶数和</span>        <span class="token keyword">int</span> evensum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">//for语句</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span><span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">2</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//不能被2除尽，表示奇数</span>                oddsum<span class="token operator">+=</span>i<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                evensum<span class="token operator">+=</span>i<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"奇数和="</span><span class="token operator">+</span>oddsum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//奇数和=2500</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"偶数和="</span><span class="token operator">+</span>evensum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//偶数和=2550</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>练习2：用while或for循环输出1-1000之间能被5整除的数，并且每行输出3个</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>struct</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForDmo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">5</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//不会换行，数值会横排下去</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//为了每输出三个（5*3=15）换行</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//就相当于i能被15整除后就会换行</span>                <span class="token comment">//System.out.print("\n");</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20200919171943801.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200919171943801"></p></li><li><p>练习3：打印九九乘法表</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>struct</span><span class="token punctuation">;</span><span class="token comment">/** * 1*1=1 * 1*2=22*2=4 * 1*3=32*3=63*3=9 * 1*4=42*4=83*4=124*4=16 * 1*5=52*5=103*5=154*5=205*5=25 * 1*6=62*6=123*6=184*6=245*6=306*6=36 * 1*7=72*7=143*7=214*7=285*7=356*7=427*7=49 * 1*8=82*8=163*8=244*8=325*8=406*8=487*8=568*8=64 * 1*9=92*9=183*9=274*9=365*9=456*9=547*9=638*9=729*9=81 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForDemo03</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//System.out.println(1+"*"+i+"="+(1*i));//打印出来的第一列</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>j<span class="token operator">+</span><span class="token string">"*"</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span><span class="token punctuation">(</span>j<span class="token operator">*</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//有\t就用print</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//在第一个for里</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="foreach语句（增强for循环）"><a href="#foreach语句（增强for循环）" class="headerlink" title="foreach语句（增强for循环）"></a>foreach语句（增强for循环）</h2><ul><li><p>主要用在数组或集合上</p></li><li><p>foreach语法格式：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span><span class="token punctuation">(</span>声明语句<span class="token operator">:</span>表达式<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//类型 变量名：表达式</span>    <span class="token comment">//代码句子</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>例子</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>struct</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForDemo04</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//方法一</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> numbers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"========"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//方法二</span>        <span class="token comment">//遍历数组的元素。将numbers赋给x并且运行numbers中的所有数组。</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token operator">:</span>numbers<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="break、continue、goto关键字"><a href="#break、continue、goto关键字" class="headerlink" title="break、continue、goto关键字"></a>break、continue、goto关键字</h2><ul><li><p>一个辞职，一个请假：</p><ol><li><p>break：在所有循环语句中可以起到==终止此次循环体的运行==（循环体外的后面的继续运行）</p></li><li><p>continue：在只能在循环语句中起==跳过此次的运行==（循环体外的后面的不运行）且放回最初的地方继续运行。</p></li><li><p>break:终止当前循环，for循环后面的程序将不再执行。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo16</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"终止后面的程序，不执行！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果如图：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210417231046375.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210417231046375"></p></li><li><p>continue：跳过后面的执行语句。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo16</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"跳过后面的程序，不执行！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果如图：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210417230810274.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210417230810274"></p></li></ol></li><li><p>插眼、传送：</p><ol><li>goto关键字通俗的来说就是带标签的continue，因为很复杂所以不研究。</li><li>对Java来说唯一用到标签的地方就是在循环语句之前。<br><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20200920190748196.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200920190748196"></li><li>“标签”是指后面跟一个冒号的标识符，例如：<code>label:</code><h2 id="双层嵌套for循环"><a href="#双层嵌套for循环" class="headerlink" title="双层嵌套for循环"></a>双层嵌套for循环</h2></li></ol></li></ul><ol><li><p>格式：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token comment">//循环体;  </span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><ul><li>外层for循环控制循环的行数，内层for循环控制循环每行的内容。</li><li>外层for循环一次，内层for循环一周。</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo04</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//内层for循环控制循环每行的内容,所以没有ln</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>j<span class="token operator">+</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">//外层for循环控制循环的行数，我不需要他输出内容，所以没有内容但有ln</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果如图：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20210420181111278.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210420181111278"></p></li><li><p>练习一：打印三角形</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>struct</span><span class="token punctuation">;</span><span class="token comment">/*** 000001* 0000111* 00011111* 001111111* 0111111111*/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//打印三角形 5行</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> j <span class="token operator">>=</span> i<span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span>i <span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">//1.相当于弄了5*5的正方形</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java流程控制-Scanner对象</title>
      <link href="/post/java-liu-cheng-kong-zhi-scanner-dui-xiang/"/>
      <url>/post/java-liu-cheng-kong-zhi-scanner-dui-xiang/</url>
      
        <content type="html"><![CDATA[<h2 id="Scanner对象"><a href="#Scanner对象" class="headerlink" title="Scanner对象"></a>Scanner对象</h2><ul><li><p>之前我们学的基础语法中我们并没有实现程序和人的交互，但是Java给我们提供了这样一个工具类，我们可以获取用户的输入。<code>java.util.Scanner</code>是Java5的新特征，==我们通过Scanner类来获取用户的输入。==</p></li><li><p>基本语法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Scanner</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在读取前我们一般需要使用hasNEXT()与hasNextLine()判断是否还有输入的数据（既然是判断就与if语句使用）。</p></li><li><p>通过Scanner类的next()与nextLine()方法获取输入的字符串。</p></li><li><p>==为了以防忘记关闭scanner，可以在new的时候提前敲好关闭scanner的代码==</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>scanner</span><span class="token punctuation">;</span><span class="token comment">//创建一个new scanner后会自动生成。</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//创建一个扫描器对象，用于接收键盘数据</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//判断用户有没有输入字符串</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"使用next方式接收："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//使用hasNext判断是否还有输入的数据</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//使用next方式接收</span>            <span class="token class-name">String</span> str <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输出的内容为："</span> <span class="token operator">+</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//凡是IO流的类都应该用完后关闭，以节省资源。</span>        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20200914152354259.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200914152354259"></p></li><li><p>用next()接收运行后只会显示“hello”我们试试nextLine():</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>scanner</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用nextLine接收："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//注意scanner以及驼峰原则。</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">hasNextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> string <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输出的内容为："</span><span class="token operator">+</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20200914154511832.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200914154511832"></p></li><li><p>区别</p><ul><li>next()：<ol><li>一定要读取到有效字符后才可以结束输入（例如Demo01）。</li><li>对输入有效字符之前遇到的空白，next()方法会自动将其去掉（以“hello world”为例，即使hello前有空格，结果还是输出hello）。</li><li>只有输入有效字符后才将其后输入的空白作为分隔符或结束符。</li><li>==next()不能得到到有空格的字符串。==</li></ol></li><li>nextLine()：<ol><li>以Enter为结束符，也就是说nextLine()方法返回的是输入回车之前的所有字符。</li><li>可以获取空白（例如Demo02）。</li></ol></li></ul></li><li><p>若不用if也可以使用</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>scanner</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo03</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输出的内容是："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span>  str <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输出的内容为:"</span><span class="token operator">+</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20200917180229616.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200917180229616"></p></li><li><p>Scanner进阶使用</p><ol><li><p>在next()中还有很多类型Int，Float，Byte…</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>scanner</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo05</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//键盘接收数据</span>        <span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> f<span class="token operator">=</span><span class="token number">0.0f</span><span class="token punctuation">;</span>        <span class="token comment">//整数部分</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入整数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">hasNextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            i<span class="token operator">=</span>scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"整数数据："</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输出的不是整数！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//小数部分</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入小数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">hasNextFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            f<span class="token operator">=</span>scanner<span class="token punctuation">.</span><span class="token function">nextFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"小数数据："</span><span class="token operator">+</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输出的不是小数！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>练习：我们可以输入多个数字，并求其总和与平均数，每输入一个数字用回车确认，通过输入非数字来结束输入并输出执行结果。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">top<span class="token punctuation">.</span>beimumu<span class="token punctuation">.</span>scanner</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo04</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//我们可以输入多个数字，并求其总和与平均数，每输入一个数字用回车确认，通过输入非数字来结束输入并输出执行结果。</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//定义一个：和</span>        <span class="token keyword">double</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">//定义一个：平均数</span>        <span class="token keyword">double</span> ave <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">//记录输入了多少个数</span>        <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">//用while循环</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">hasNextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//输入的数字</span>            <span class="token keyword">double</span> x <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            m<span class="token operator">=</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>            sum<span class="token operator">+=</span>x<span class="token punctuation">;</span>            ave <span class="token operator">=</span> sum<span class="token operator">/</span>m<span class="token punctuation">;</span>            <span class="token comment">//为了更直白地了解这个程序的精髓</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你输入的第"</span><span class="token operator">+</span>m<span class="token operator">+</span><span class="token string">"个数的总和是"</span><span class="token operator">+</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>m<span class="token operator">+</span><span class="token string">"个数的总和是："</span><span class="token operator">+</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>m<span class="token operator">+</span><span class="token string">"个数的平均数是："</span><span class="token operator">+</span>ave<span class="token punctuation">)</span><span class="token punctuation">;</span>        scanner<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Scanner对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git部署Github和Gitee共存</title>
      <link href="/post/git-bu-shu-github-he-gitee-gong-cun/"/>
      <url>/post/git-bu-shu-github-he-gitee-gong-cun/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>学习git命令后就实际操作了一番，但有一说一在Git部署Github和Gitee共存时确实遇到一些问题，所以就想做一总结整理，当然在学习过程也看了一些大佬的经验。哈哈，这也算是为将来打下基础吧。</p><h2 id="配置SSH公钥"><a href="#配置SSH公钥" class="headerlink" title="配置SSH公钥"></a>配置SSH公钥</h2><ol><li><p>GitHub密钥</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"YourGIthubEmail@mail.com"</span> -f <span class="token string">"github_id_rsa"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后命令<code>cat github_id_rsa.pub</code>即可查看github的公钥，然后复制在添加到github的SSH keys中保存。</p></li><li><p>Gitee密钥</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"YourGiteeEmail@mail.com"</span> -f <span class="token string">"gitee_id_rsa"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>复制<code>gitee_id_rsa.pub</code>公钥到gitee的SSH keys中保存。</p></li></ol><p>以上两步完成后在<code>~/.ssh</code>文件中出现:</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/image-20200906101335625.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200906101335625"></p><ol start="3"><li><p>创建config文件避免ssh冲突</p><p>在<code>~/.ssh</code>文件夹下新建<code>config</code>文件，在里面添加以下内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gitee</span>Host gitee.comHostName gitee.comPreferredAuthentications publickeyIdentityFile ~/.ssh/gitee_id_rsa<span class="token comment"># github</span>Host github.comHostName github.comPreferredAuthentications publickeyIdentityFile ~/.ssh/github_id_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>测试</p><ul><li><p>执行<code>ssh -T git@github.com</code>,接着会让选择yes ，最后出现<code>successfully</code>,则github配置成功。</p></li><li><p>执行<code>ssh -T git@gitee.com</code>,接着会让选择yes ，最后出现<code>successfully</code>,则gitee配置成功。</p></li></ul><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/image-20200906102426599.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200906102426599"></p></li></ol><p>以上工作全部完成后在<code>~/.ssh</code>文件下见到</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/image-20200906103022196.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200906103022196"></p><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>创建前需要提前说一下在此过程问题诸多，按照步骤一步一步来。闲言少叙，走起。</p><ol><li><p>在gitee上创建一个仓库。</p></li><li><p>使用<code>git cine [url]</code>克隆到本地。</p></li><li><p>在github上创建一个与gitee和本地仓库名字相同的空仓库。创建仓库时不要勾选这些：</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/image-20200906104936144.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200906104936144"></p></li></ol><p>==tips：如果以3步没弄正确则会遇到git push报错error: failed to push some refs to：的问题==</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/image-20200906103900473.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200906103900473"></p><p>这就是在push过程中本地仓库和远程仓库二者间内容没有联系。问题改了之后，命令<code>git push github master</code>，下图为成功。</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/image-20200906110724725.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200906110724725"></p><ol start="4"><li><p>在命令<code>git push github master</code>后还会出现==git push报错fatal: HttpRequestException encountered.的问题==</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/image-20200906112156662.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200906112156662"></p></li></ol><p>在网上查了下原因：出现该提示信息的主要原因是Github禁用了TLS v1.0 and v1.1这种弱加密标准，此时需要手动更新Windows的git凭证管理器，更新方式很简单，在网站下载Git在Window上的凭证管理器并默认安装即可。</p><ul><li><a href="https://github.com/microsoft/Git-Credential-Manager-for-Windows/releases/tag/1.20.0">https://github.com/microsoft/Git-Credential-Manager-for-Windows/releases/tag/1.20.0</a></li></ul><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/image-20200906112905817.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200906112905817"></p><p>两个报错解决后，则可以：</p><ol><li>上传到GitHub：<code>git push github master</code></li></ol><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/image-20200906114322520.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200906114322520"></p><ol start="2"><li>上传到Gitee：<code>git push gitee master</code></li></ol><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/image-20200906114924463.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200906114924463"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上就是我学习git部署过程中所遇到的问题。遇到都已解决，而未遇到的问题以后再说。在这其中也让我再一次熟悉了git基本命令和自主学习能力，即不会就自己动手查阅资料和请教他人。虽然自主学习过程中有些坎坷但是解决后是无比的开心和满足。</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
          <category> 环境部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git命令 </tag>
            
            <tag> Gitee </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础语法</title>
      <link href="/post/java-ji-chu-yu-fa/"/>
      <url>/post/java-ji-chu-yu-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul><li>Java中的注释有三种：<ol><li>单行注释“//”</li><li>多行注释“/* */“</li><li>文档注释”/**  */“</li></ol></li></ul><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><ul><li><p>关键字</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/%E6%A0%87%E8%AF%86%E7%AC%A6.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="标识符"></p></li><li><p>Java所有的组成部分都需要名字。==类名、变量名以及方法名都称为标识符==</p></li><li><p>标识符注意点</p><ol><li>所有的标识符都应该以字母(A-Z or a-z)、美元符($)、或者下划线（_）开始，尽量不要用中文或拼音命名</li><li>首字符之后可以是字母(A-Z or a-z)、美元符($)、下划线（_）或数字的任何字符组合</li><li>标识符是==大小写敏感==的</li><li>合法标识符举例：age、$salary、_value、 __1 _value</li><li>非法标识符举例：123abc、-salary、#abc</li><li>用中文名命名的例子</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> 标识符 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> 王者荣耀<span class="token operator">=</span><span class="token string">"荣耀王者"</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>王者荣耀<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ul><li><p>强类型语言</p><ul><li>要求变量的使用要严格符合规定，所有变量都必须先定义后才能使用</li></ul></li><li><p>弱类型语言（不要求严格规定）eg：js。</p></li><li><p>Java的数据类型分为两大类</p><ul><li><p>基本类型</p><ol><li><p>数值类型：整数类型（byte、short、int、long）、浮点类型（float、double）、字符类型（char）。</p><p>==字符串（String）不是关键字==</p></li><li><p>boolean类型：占1位，其值（布尔值）只有true和false。</p></li></ol></li><li><p>引用类型</p></li></ul></li><li><p>拓展</p><ul><li>整数表示：</li></ul><table><thead><tr><th align="center">二进制</th><th align="center">八进制</th><th align="center">十进制</th><th align="center">十六进制</th></tr></thead><tbody><tr><td align="center">0b</td><td align="center">0</td><td align="center">正常表示</td><td align="center">0x</td></tr></tbody></table><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/e.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="e"></p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/r.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="r"></p><ul><li><p>浮点数拓展：银行数钱。==最好完全避免使用浮点数进行比较==可以使用BigDecimal</p></li><li><p>字符拓展：所有的字符本质还是数字 </p></li><li><p>编码：Unicode （97=a 65=A）2字节</p></li><li><p>转义字符：<code>\t</code>水平制表符</p></li><li><p>分割线：<code>System.out.println(&quot;=======&quot;);</code></p></li><li><p>布尔值扩展：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token operator">==</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">//两个是相等的，这个默认判断flag的true。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><ul><li><p>由于java是强类型语言，所以要进行有些运算需要类型转换</p><blockquote><p>低————————————————-&gt;高</p><p>byte,short,char-&gt;int-&gt;long-&gt;float-&gt;double</p></blockquote></li><li><p>运算中，不同类型的数据先转化为同一类型，然后再进行计算。</p><ul><li>例如：定义int，byte，要将i值赋给b，此时会报错。所以我们需要类型转换</li></ul><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/q.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="q"></p><ul><li><p>即：在要将转换前加==转换类型==为强制转换：==（类型）变量名==。是高到低，而自动转换是低到高。</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20200830183545268.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200830183545268"></p><p>但是运行后会发现是“-128”（这就是“内存溢出”）。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*注意：1.不能对布尔值进行转换2.不能把对象类型转换为不相干的类型3.在把高容量转换到低容量时，强制转换4.转换的时候可能存在内存溢出或精度问题（浮点数在转换整型不会四舍五入）*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20200830183131791.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200830183131791"></p><p>输出结果为：98，b。</p></li><li><p>操作比较大的数的时候，注意溢出问题</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20200830184838035.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200830184838035"></p>  <pre class="line-numbers language-java" data-language="java"><code class="language-java">  <span class="token keyword">int</span> money<span class="token operator">=</span><span class="token number">10_0000_0000</span><span class="token punctuation">;</span><span class="token keyword">int</span> year<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span><span class="token keyword">int</span> total<span class="token operator">=</span>money<span class="token operator">*</span>year<span class="token punctuation">;</span><span class="token comment">//-1474836480,结果溢出</span><span class="token keyword">long</span> total2<span class="token operator">=</span>money<span class="token operator">*</span>year<span class="token punctuation">;</span><span class="token comment">//-1474836480虽然转换了类型但是结果还是没变，因为money和year在运算前就已经默认为int型</span><span class="token keyword">long</span> total3<span class="token operator">=</span>money<span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>year<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//先转型后计算就会得到我们想要的结果：20000000000</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>total2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>total3<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li><p>作用：将不确定的数据进行存储，即需要在内存中开辟一个空间，方便运算，因为数据不确定，所以确定该数据的名字和存储空间。</p></li><li><p>特点：变量空间可以重复使用</p></li><li><p>每个变量都必须声明其类型</p></li><li><p>Java变量是程序中最基本的存储单元，其要素包括变量名，变量类型和作用域</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">typle varName <span class="token punctuation">[</span><span class="token operator">=</span>value<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token punctuation">,</span>varName<span class="token punctuation">[</span><span class="token operator">=</span>value<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//数据类型变量名 = 值；可以使用逗号隔开来声明多个同类型变量。不太建议。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>注意事项</p><ul><li>每个变量都有类型，类型可以是基本类型，也可以是引用类型（string）</li><li>变量名必须是合法的标识符</li><li>变量声明是一条完整的语句，因此每一个声明都必须以分号结束</li><li>命名规范：类名：大驼峰命名法，属性名/方法名：小驼峰命名法</li><li>在数据不确定时，可以定义变量</li><li>变量三要素：==数据类型 变量名称=初始值==</li></ul></li></ul><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><ul><li><p>范围：从变量定义的位置开始，到该变量所在的那对大括号结束</p></li><li><p>补充：在类方法里除了main方法还可以定义一些属性（成员变量）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo04</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//属性：类的成员变量</span>    <span class="token comment">//main方法</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">&#125;</span>    <span class="token comment">//其他方法</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>类的成员变量分为==静态变量==和==实例变量==</p></li><li><p>类变量（静态变量）：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo04</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//类变量（需加static关键字）</span>      <span class="token keyword">static</span> <span class="token keyword">double</span> salary <span class="token operator">=</span> <span class="token number">2500</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//类变量在有static时可以直接在main方法里使用。 </span>   <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>实例变量</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo04</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//实例变量（类和main之间）：从属于对象，如果不进行初始化，这个类型会用默认值。</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span><span class="token comment">//不需要初始化</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token class-name">Demo04</span> demo04 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Demo04</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/*           1.快捷键：new Demo04()后加“.var”回车。           2.变量类型也可以是本身。           3.格式：变量类型 变量名 = new Demo04();        */</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>demo04<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//没有赋值，默认为0。</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>demo04<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//默认为null。</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>局部变量</p><pre class="line-numbers language-Java" data-language="Java"><code class="language-Java">public class Demo04 &#123;    public static void main(String[] args) &#123;  &#x2F;&#x2F;局部变量（只活在main方法里）：必须声明变量和初始化值    int i &#x3D; 10;    System.out.println(i);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><ul><li>范围：从变量定义时就在内存中存在，变量到达所在作用域之后就在内存中消失</li></ul><h3 id="基本数据类型的默认值"><a href="#基本数据类型的默认值" class="headerlink" title="基本数据类型的默认值"></a>基本数据类型的默认值</h3><ul><li>数值类型一般默认值==0或0.0==</li><li>字符串型默认值==u0000==</li><li>布尔值默认值为==false==。</li><li>除了基本类型，其余类型默认值都是==null==。</li></ul><h3 id="变量的命名规范"><a href="#变量的命名规范" class="headerlink" title="变量的命名规范"></a>变量的命名规范</h3><ul><li>所有变量、方法、类名：见名知意</li><li>类成员变量：首字母小写和驼峰原则（==除了第一个单词以外，后面的单词首字母大写==）：monthSalary </li><li>局部变量：首字母小写和驼峰原则</li><li>常量：大写字母和下划线：MAX_VALUE</li><li>类名：首字母大写和驼峰原则：Man，GoodMan</li><li>方法名：首字母小写和驼峰原则：run()，runRun()</li></ul><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><ul><li><p>常量（constant）：初始化（initialize）后不能在改变值，不会变动的值。</p></li><li><p>所谓常量可以理解成一种特殊的变量。它的值被设定后，在程序运行过程中不允许被改变。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">final</span> 常量名 <span class="token operator">=</span> 值；<span class="token keyword">final</span> <span class="token keyword">double</span> PI <span class="token operator">=</span> <span class="token number">3.14</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>常量名一般使用大写字符。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo05</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//修饰符（不区分先后顺）：public，static</span>    <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">double</span> PI <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>PI<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="运算符（operator）"><a href="#运算符（operator）" class="headerlink" title="运算符（operator）"></a>运算符（operator）</h2><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/image-20200904085536753.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20200904085536753"></p><ul><li><p><code>==</code> 比较内存地址是否相同 。</p></li><li><p><code>equals</code>是比较字符串的内容是否相同。</p><p>==格式：某个字符串.equals（字符串）==</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo06</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> s2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1<span class="token operator">==</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//"=="比较内存地址是否相同</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//"equals"是比较字符串的内容是否相同。</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>运算符优先级：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02_1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> r1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">></span><span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token operator">++</span>temp<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//r1的条件不满足，短路与</span>        <span class="token comment">//运算符优先级：自增（++）优先于等于（==）</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"r1="</span><span class="token operator">+</span>r1<span class="token operator">+</span><span class="token string">" temp="</span><span class="token operator">+</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//r1=false,temp=1</span>        <span class="token keyword">boolean</span> r2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">/</span><span class="token number">0</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//r2的条件不满足，短路与，0不能做除数</span>        <span class="token comment">//运算符优先级：算数运算符（/）优先于关系运算符（>）</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"r2="</span><span class="token operator">+</span>r2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//r2=false</span>        <span class="token keyword">boolean</span> r3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">/</span><span class="token number">0</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//r2的条件不满足，短路或，0不能做除数</span>        <span class="token comment">//运算符优先级：算数运算符（/）优先于关系运算符（>）</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"r3="</span><span class="token operator">+</span>r3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//r3不会执行，因为会有“ArithmeticException: / by zero”算数的除0异常显示</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ol><li><p>算术运算符</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">/</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出结果：0</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">%</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出结果：10</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">/</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出结果：0.5</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">long</span> a<span class="token operator">=</span><span class="token number">123123123L</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> b<span class="token operator">=</span><span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">short</span> c<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span> d<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//long型（只要出现long就是long型，其余都会默认int型）</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//int型</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token operator">+</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//int型</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>关系运算符</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo03</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//关系运算符的返回值是布尔值，只有true or false。</span>        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">></span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//flase</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">&lt;</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">==</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//flase</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">>=</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//flase</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">!=</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>自增、自减运算符</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo04</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//自增运算</span>        <span class="token keyword">int</span> a<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//这个a无变化还是3。</span>        <span class="token comment">//后增</span>        <span class="token keyword">int</span> b<span class="token operator">=</span> a<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//先将a的值赋给b，在进行自增运算。</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//先将a的值赋给b（b=3）</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//再进行自增运算（a=4）</span>        <span class="token comment">//先增</span>        <span class="token keyword">int</span> c<span class="token operator">=</span><span class="token operator">++</span>a<span class="token punctuation">;</span><span class="token comment">//先自增运算，后将a值赋给c。</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//先自增运算（a=5）</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//后将a值赋给c（c=5）</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo05</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//自减运算</span>        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//值没变，a=10</span>        <span class="token comment">//后减</span>        <span class="token keyword">int</span> b <span class="token operator">=</span> a<span class="token operator">--</span><span class="token punctuation">;</span><span class="token comment">//先将a赋给b，再自减运算。</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//先将a赋给b（b=10）</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//再自减运算（a=9）</span>        <span class="token comment">//先减</span>        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token operator">--</span>a<span class="token punctuation">;</span><span class="token comment">//先进行自减运算，后将a赋给b。</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//先进行自减运算（a=8）</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//后将a赋给b（a=8）</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>初始Math类——幂运算</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo06</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//幂运算</span>        <span class="token keyword">double</span> pow<span class="token operator">=</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pow<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//pow=2*2*2=8</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>逻辑运算符</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo07</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//逻辑运算：&amp;&amp;与 ||或 ！非</span>        <span class="token keyword">boolean</span> a <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token comment">//引号内容是原样输出，加号起连接作用</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"a &amp;&amp; b:"</span><span class="token operator">+</span><span class="token punctuation">(</span>a <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//&amp;&amp;与运算，两个变量都为真，结果才为真。</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"a || b:"</span><span class="token operator">+</span><span class="token punctuation">(</span>a <span class="token operator">||</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//||或运算，有一个变量为真，结果才为真。</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"!(a &amp;&amp; b):"</span><span class="token operator">+</span><span class="token operator">!</span><span class="token punctuation">(</span>a <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//！非运算，如果为真则为假；如果为假则为真。</span>        <span class="token comment">//短路运算</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"===="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> c1 <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> c2<span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> f <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> d <span class="token operator">=</span> <span class="token punctuation">(</span>c1<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>c1<span class="token operator">++</span><span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> e <span class="token operator">=</span> <span class="token punctuation">(</span>f<span class="token operator">++</span><span class="token operator">></span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>c2<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//不执行自加运算，c1=5</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//前为真，先赋值后执行自加运算，f=6</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//后为假，c2=5</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>位运算</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*        位运算：        A: 0011 1101        B: 1101 0001        -------------        A&amp;B:0001 0001 见0为0，全1为1。        A/B:1111 1101 见1为1，全0为0。        A^B:1110 1100 相同为0，不同为1。         ~B:0010 1110 取反操作。       2*8=16 2*2*2*2=16       &lt;&lt; 左移       >> 右移       0000 0000 0       0000 0001 1       0000 0010 2       0000 0011 3       0000 0100 4       0000 0101 5       0000 0110 6       0000 0111 7       0000 1000 8       0001 0000 16         */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>字符串连接符</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo09</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//字符串连接符 +</span>    <span class="token comment">//("")string类型，即使没有string，也默认为string。</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> a<span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> b<span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//30</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token operator">+</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1020</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//30</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>三目运算符</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo10</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//三目运算符</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> score <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> type <span class="token operator">=</span> score<span class="token operator">></span><span class="token number">60</span><span class="token operator">?</span><span class="token string">"及格"</span><span class="token operator">:</span><span class="token string">"不及格"</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="包机制"><a href="#包机制" class="headerlink" title="包机制"></a>包机制</h2><ul><li><p>为了更好地组织类，Java提供了包机制，用于区别类名的命名空间。</p></li><li><p>包语句的语法格式为：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">pkg1</span><span class="token punctuation">[</span><span class="token punctuation">.</span> pkg2<span class="token punctuation">[</span><span class="token punctuation">.</span> pkg3<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>==一般利用公司域名倒置作为包名；==</p></li><li><p>为了能够使用某一个包的成员，我们需要在Java程序中明确导入该包，使用“import”语句来完成此功能。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">package1</span><span class="token punctuation">[</span><span class="token punctuation">.</span>package2<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span>classname<span class="token operator">|</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">package<span class="token punctuation">.</span></span>Demo01</span><span class="token comment">//调用Demo01</span><span class="token keyword">import</span> <span class="token keyword">package</span><span class="token punctuation">.</span>*<span class="token comment">//通配符，导入这个包下所有的类。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="JavaDoc生成文档"><a href="#JavaDoc生成文档" class="headerlink" title="JavaDoc生成文档"></a>JavaDoc生成文档</h2><ul><li><p>参数信息</p><ol><li>@author 作者名</li><li>@version 版本号</li><li>@since 指明需要最早使用的jdk版本</li><li>@param 参数名</li><li>@return 返回值情况</li><li>@throws 异常抛出情况</li></ol></li><li><p>Javadoc生成文档</p><p>格式：javadoc 参数 文件名</p><p><code>javadoc -encoding UTF-8 -charset UTF-8 [filesname]</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git相关操作</title>
      <link href="/post/git-xiang-guan-cao-zuo/"/>
      <url>/post/git-xiang-guan-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h2 id="常用的Linux命令"><a href="#常用的Linux命令" class="headerlink" title="常用的Linux命令"></a>常用的Linux命令</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>. cd：改变目录<span class="token number">2</span>. <span class="token builtin class-name">cd</span> <span class="token punctuation">..</span> 回退到上一个目录，直接cd进入默认目录<span class="token number">3</span>. pwd：显示当前所在路径<span class="token number">4</span>. ls<span class="token punctuation">(</span>ll<span class="token punctuation">)</span>： 都是列出当前目录中的所有文件，只不过ll列出的内容更为详细<span class="token number">5</span>. touch：新建一个文件如touch index.js就会在当前目录下新建一个index.js文件<span class="token number">6</span>. rm：删除一个文件，rm index.js就会把index.js文件删除<span class="token number">7</span>. mkdir：新建一个目录，就是新建一个文件夹<span class="token number">8</span>. <span class="token function">rm</span> -r：删除一个文件夹，rm -r src 删除src目录<span class="token number">9</span>. mv：移动文件<span class="token number">10</span>. reset：重新初始化终端/清屏<span class="token number">11</span>. clear：清屏<span class="token number">12</span>. history：查看命令历史<span class="token number">13</span>. help：帮助<span class="token number">14</span>. exit：退出<span class="token number">15</span>. <span class="token comment">#表示注释</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Git环境配置"><a href="#Git环境配置" class="headerlink" title="Git环境配置"></a>Git环境配置</h2><ol><li><p>查看基础配置：</p><ul><li>git config -l</li></ul></li><li><p>系统配置：</p><ul><li>git config –system –list</li></ul></li><li><p>本地配置：</p><ul><li>git config –global –list</li></ul></li><li><p>配置文件地址都在本地：</p><ul><li><p>E:\Git\Git\etc\gitconfig （–system系统级）</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/358.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="358"></p></li><li><p>C:\Users\琲木木.gitconfig （只适用当前登录用户的配置–global全局）</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/947.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="947"></p></li></ul></li><li><p>用户登录配置：</p><ul><li><code>git config --global user.email &quot;you@example.com&quot;</code></li><li><code>git config --global user.name &quot;Your Name&quot;</code></li></ul></li></ol><h2 id="Git基本理论"><a href="#Git基本理论" class="headerlink" title="Git基本理论"></a>Git基本理论</h2><ol><li><p>工作区域</p><p>git本地有三个工作区域：</p><ul><li>工作目录</li><li>暂存区</li><li>HEAD资源库</li></ul><p>实际文件通过add命令到暂存区接着通过commit命令到HEAD</p></li><li><p>工作流程</p><p>git的工作流程一般是这样的：</p><ul><li>在工作目录中添加、修改文件</li><li>将需要进行版本管理的文件放入暂存区域</li><li>将暂存区域的文件提交到git仓库</li></ul><p>因此，git管理的文件有三种状态：已修改（modified），已暂存（stage）、已提交（committed）</p></li></ol><h2 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h2><ol><li><p>创建一个本地仓库</p></li><li><p>在cmd中打开查找git</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/FTGXPW9U4_Z1WSXJ1I$QHMG.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="FTG"></p></li><li><p>输入<code>cd .\创建本地仓库名\</code></p></li><li><p>输入<code>git init</code>初始化，就会建立一个空仓库</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/H4Y%605N5U4%7D%5DOBC%60F%7D7G5%6002.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="H4Y"></p></li><li><p>在创建的本地仓库中就可以看到隐藏的.git文件</p></li><li><p>在GitHub上创建一个仓库</p></li><li><p>会出现一个HTTP链接以及一些操作教程</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/H_52~PT2TT3ET41U7$VQS~3.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="H_52"></p></li></ol><h2 id="Git文件操作"><a href="#Git文件操作" class="headerlink" title="Git文件操作"></a>Git文件操作</h2><ol><li><p>查看文件状态</p><ul><li>git status [filename]</li></ul></li><li><p>添加和提交</p><ul><li>git add<filename></li><li>git add .(添加文件比较多时)</li><li>git commit -m “代码提交信息”</li></ul><p>tips：添加本地文件好后查看文件状态命令，成功后在提交文件。</p></li><li><p>忽略文件</p><p>在主目录下建立“.gitignore”文件，此文件有如下规则：</p><ul><li>忽略文件中的空行或以(#)开始的行将被忽略。</li><li>可以使用Linux通配符。eg：(*)代表任意多个字符，(?)代表一个字符，([abc])代表可选字符范围（{string1,string2,…}）代表可选字符串等。</li><li>如果名称的最前面有一个感叹号(!)，表示例外规则，将不可忽略。</li><li>如果名称的最前面有一个路径分隔符（/），表示要忽略的文件在此目录下，而子目录中的文件将不可忽略。</li><li>如果名称的最后面有一个路径分隔符（/），表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#为注释</span>*.txt<span class="token comment">#忽略所有.txt结尾的文件，这样的话上传就不会被选中！</span>！lib.txt<span class="token comment">#但lib.txt除外</span>/temp<span class="token comment">#仅忽略项目根目录下的TODO文件，不包括其他目录temp</span>build/<span class="token comment">#忽略build/目录下的所有文件</span>doc/*.txt<span class="token comment">#会忽略doc/notes.txt但不包括doc/server/arch.txt</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>推送改动</p><p>实现本地仓库提交到远端仓库</p><ul><li>git push origin master</li></ul><p>若为克隆现有仓库，并想将你的仓库连接到远端服务器就需要</p><ul><li>git remote add origin<server></li></ul><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/di.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="di"></p></li><li><p>分支</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 列出本地所有分支</span><span class="token function">git</span> branch<span class="token comment"># 列出所有远程分支</span><span class="token function">git</span> branch -r<span class="token comment"># 新建一个分支，但依然停留在当前分支</span><span class="token function">git</span> branch <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span class="token comment"># 新建一个的分支，并切换到该分支</span><span class="token function">git</span> checkout -b <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span class="token comment"># 删除分支</span><span class="token function">git</span> checkout -d <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span class="token comment"># 切换主分支</span><span class="token function">git</span> checkout master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>更新与合并</p><p>git pull拉取：</p><ul><li>git pull origin 分支名</li></ul><p>合并前可以使用命令预览差异：</p><ul><li>git diff <source_branch> <target_branch></li></ul><p>两分支合并一起：</p><ul><li>git  merge &lt;要合并的分支&gt;</li></ul></li><li><p>标签</p><p>创建标签：</p><ul><li>git tag 版本号 commit的字符串</li></ul><p>获取提交id：</p><ul><li>git log</li></ul><p>推送标签：</p><ul><li>git push origin master –tags</li></ul></li><li><p>替换本地改动</p><p>如果操作失误，可以用以下命令替换本地改动：</p><ul><li>git checkout –<filename></li></ul><p>此命令会使用HEAD中的最新内容替换掉你的工作目录的文件。已添加到暂存区的改动以及新文件都不会受到影响。</p><p>如果你想丢弃你在本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它：</p><ul><li>git fetch origin</li><li>git reset –hard origin/master</li></ul></li><li><p>克隆仓库</p><ul><li>git clone [url]</li></ul></li></ol><h2 id="Gitee上设置SSH公钥"><a href="#Gitee上设置SSH公钥" class="headerlink" title="Gitee上设置SSH公钥"></a>Gitee上设置SSH公钥</h2><ol><li><p>gitee上设置SSH公钥，实现免密码登录!</p><ul><li><p>在<code>C:\Users\琲木木\.ssh</code>若没有.ssh文件可以创建一个</p></li><li><p>生成公钥<code>ssh-keygen</code></p></li><li><p>若想加密则需加密算法<code>ssh-keygen -t rsa</code>，然后就会出现两个文件</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/a.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="a"></p></li></ul></li><li><p>将公钥信息public key添加到gitee上</p></li><li><p>创建仓库</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/s.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="s"></p></li><li><p>克隆到本地</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/we.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="we"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
          <category> 环境部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git命令 </tag>
            
            <tag> Github </tag>
            
            <tag> Gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的DOS命令和Hello,world!</title>
      <link href="/post/chang-yong-de-dos-ming-ling-he-hello-world/"/>
      <url>/post/chang-yong-de-dos-ming-ling-he-hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="常用的DOS命令"><a href="#常用的DOS命令" class="headerlink" title="常用的DOS命令"></a>常用的DOS命令</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#盘符切换--直接输入要去的盘:</span><span class="token comment">#查看当前目录下的所有文件--dir</span><span class="token comment">#切换目录</span><span class="token number">1</span>、格式：cd<span class="token punctuation">(</span>change directory<span class="token punctuation">)</span> /d 盘名<span class="token number">2</span>、同级目录,返回上级：cd <span class="token punctuation">..</span><span class="token comment">#查看当前目录的文件--cd 目录</span><span class="token comment">#清屏--cls(clear screen)</span><span class="token comment">#退出终端--exit</span><span class="token comment">#查看电脑IP--ipconfig</span><span class="token comment">#打开应用</span>calc<span class="token punctuation">(</span>calculator<span class="token punctuation">)</span>maspaintnotepad<span class="token comment">#ping命令--</span><span class="token function">ping</span> 网址<span class="token comment">#文件操作</span>md<span class="token punctuation">(</span>创建<span class="token punctuation">)</span> 目录名rd<span class="token punctuation">(</span>移除<span class="token punctuation">)</span> 目录名cd<span class="token operator">></span><span class="token punctuation">(</span>添加<span class="token punctuation">)</span>文本名del<span class="token punctuation">(</span>删除<span class="token punctuation">)</span>文件名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="hello-world！"><a href="#hello-world！" class="headerlink" title="hello,world！"></a>hello,world！</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//public class 表示一个类</span><span class="token keyword">public</span> <span class="token keyword">class</span> hello<span class="token punctuation">&#123;</span><span class="token comment">//public static void 关键字，main 表示方法,String[] args 参数</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//输出的句子</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"hello,world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/java/hello.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="hello"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#编译Java文件--javac 文件名</span><span class="token comment">#此时会出现后缀为.class的文件，并打开--Java 文件名(不需要添加后缀)</span><span class="token comment">#出现“hello，world！”即第一个代码成功。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>用<code>psvm</code>快速打出<code>public static void main(String[] args)</code></p><p>用<code>sout</code>快速打出<code>System.out.print();</code></p><ul><li>可能遇到的问题<ol><li>注意大小写，<strong>java很敏感</strong>；</li><li>尽量使用英文；</li><li>文件名与class对应；</li><li>符号使用中文。</li></ol></li></ul><h2 id="Java程序运行机制"><a href="#Java程序运行机制" class="headerlink" title="Java程序运行机制"></a>Java程序运行机制</h2><p>编译型与解释型：编译的时机不同。</p><ul><li><p>编译型：将自己的源代码转换成电脑可以执行的代码。执行速度快。（源文件<code>java</code>预编译成字节码文件<code>class</code>）</p></li><li><p>解释型：写什么就翻译什么。</p></li></ul><h2 id="使用idea的项目创建"><a href="#使用idea的项目创建" class="headerlink" title="使用idea的项目创建"></a>使用idea的项目创建</h2><ol><li><p>创建新项目</p></li><li><p>选择empty project</p></li><li><p>选择new，找到添加模块；一路next，然后项目就建好了。</p></li><li><p>在建好的文件找到src文件，右键选择创建<code>.class</code>。</p><p>tips：注意项目结构的配置，在project下两栏版本保持一致。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Dos </category>
          
          <category> Java </category>
          
          <category> 环境部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Dos命令 </tag>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Gridea+Github搭建自己的Blog</title>
      <link href="/post/ji-yu-gridea-github-da-jian-zi-ji-de-blog/"/>
      <url>/post/ji-yu-gridea-github-da-jian-zi-ji-de-blog/</url>
      
        <content type="html"><![CDATA[<h2 id="木木有话说："><a href="#木木有话说：" class="headerlink" title="木木有话说："></a>木木有话说：</h2><p>​上学期就想搭建博客，然后因为太懒就没有搭建，假期呢心血来潮就想搭建了，我是搭建在Gridea上，同时也看过搭建在hexo的视频，发现有点麻烦，但Gridea不论是搭建还是专门操作平台都很简便，所以我就选择了Gridea。当然在整个搭建过程中自己摸索是很难受的，第一次熬到凌晨四点，仅仅是为了一个外链路径（当时还不知道图床）。第二次中途因为PicGo的设置导致图床搭建不成功，但皇天不负有心人，请教他人，最终找到了问题所在！<br>这篇博客不讲教程只讲我遇见的问题。因为搭建教程b站很多。下面就是我在搭建过程中在GitHub、Gridea、Gitee、PicGo和typora等几个软件中遇见的小问题。前提的下载好Git和node.js。</p><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><ul><li><p>浏览器：Chrome，插件：谷歌访问助手或者谷歌上网助手，这两个插件都行，是为了进GitHub。</p></li><li><p>注册</p><ul><li><p>邮箱建议用outlook、gmail、126邮箱、163邮箱。不是很建议用QQ邮箱，因为QQ邮箱接收国外网站的邮件有时候会当做垃圾邮件放入垃圾桶没有显示。当然有人也注册成功了，这我不可否认的。</p></li><li><p>在注册过程中还会出现连接不到服务器或者是服务器无响应。因为GitHub是外国的，所以这些是正常现象，这个就建议找个网络好点的地方（我家里网不是很好，当时我在家里注册时就失败了，然后去学校后就注册成功了。也不知是不是玄学问题，我晚上上GitHub特别快）。</p></li></ul></li><li><p>仓库设置</p><ul><li>创建一个搭建在Gridea上的仓库，格式：==用户名.github.io==。</li></ul></li><li><p>私人令牌</p><ul><li>令牌只有一次查看机会，所以生成的新令牌保存到剪贴板或者文档里以便于后续操作时可以查看。</li></ul></li></ul><h2 id="Gitee"><a href="#Gitee" class="headerlink" title="Gitee"></a>Gitee</h2><p>​中国版的GitHub，因为是国内的所以速度很快。所以图床也可以搭建在Gitee上，建仓库以及私人令牌与Github如法炮制。</p><h2 id="Gridea"><a href="#Gridea" class="headerlink" title="Gridea"></a>Gridea</h2><ul><li>远程<ul><li>CNAME这个就是有网站域名的填，一般没有就不用填。其他的有视频教程就不赘述。</li></ul></li><li>主题<ul><li>主题上我用的主题商店里得fog。在设置中遇见了一些问题。图片加载方式建议使用外链。目的是进博客时可以加载的快点。这时图床作用就大了，这里先不说后面会详细说。</li></ul></li><li>外链：</li></ul><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/20200722170441.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="20200722170441"></p><p>​注意：记得将<code>blob/</code>改成<code>raw/</code>后即外链生成。</p><p>​当然有了图床后就不需要那么麻烦。</p><h2 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h2><p>​在这儿就得说说“图床”，说通俗一点是图片储存的地方或者服务器，网上有收费的，但是我们可以自己搭建一个免费的图床。这里说两种方法。</p><ul><li>搭建在GitHub上的图床<ul><li>那么就需要在GitHub上再创建一个专门放图片的仓库，仓库名不要有空格和花里胡哨的符号，如+-%等。</li><li>设置自定义域名。因为GitHub是外国的加载会很慢，此时就需要cdn加速，免费链接双手奉上<code>https://cdn.jsdelivr.net/gh/用户名/仓库名</code>。</li></ul></li></ul><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/20200722173243.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="20200722173243"></p><ul><li>搭建在Gitee上的图床，和GitHub的方法一样。不过不需要cdn加速。<ul><li>customUrl可以不用填。</li></ul></li></ul><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/20200722173702.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="20200722173702"></p><ul><li><p>path指的是图片存储路径。填入路径后就会在仓库建立一个文件夹。</p></li><li><p>当所有设置好后但照片还是上传失败,原因可能是</p><ul><li>在设置PicGo中若出现此情况，解决办法：</li></ul><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/20200722182557.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="20200722182557"></p><p><img "" class="lazyload placeholder" data-original="https://cdn.jsdelivr.net/gh/beimumu/tuchuang/typora/cuowu.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="cuowu"></p><ul><li>在<code>C:\Users\用户名\AppData\Roaming\picgo\data.json</code>。找到文件后右键==属性==；</li><li>在文件属性界面==常规==选卡下，点击==更改==按钮；</li></ul><p><img "" class="lazyload placeholder" data-original="https://cdn.jsdelivr.net/gh/beimumu/tuchuang/typora/gengai.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="gengai"></p><ul><li>接着就会弹出选择打开程序界面，我们只需选择PicGo点击确定保存即可！(若没有看见PicGo，就查看更多应用，再或者浏览文件找到picgo.exe保存确定即可)。</li></ul></li></ul><p><img "" class="lazyload placeholder" data-original="https://cdn.jsdelivr.net/gh/beimumu/tuchuang/typora/xuanze.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="xuanze"></p><h2 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h2><ul><li><p>配置环境变量</p><ul><li>前提: 先安装node.js，版本要大于8,然后配置环境。</li><li>先找到环境变量，打开控制面板搜索==编辑系统环境变量==，点击环境变量，点击Path，点击编辑。</li></ul><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/20200722185508.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="20200722185508"></p><ul><li><p>然后新建，把<code>%APPDATA%\picgo\data.json</code>粘贴到上面。重启使环境变量生效。</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/20200722185911.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="20200722185911"></p></li></ul></li></ul><h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><ul><li><p>偏好设置中PicGo的路径设置</p><p><img "" class="lazyload placeholder" data-original="https://gitee.com/beimumu/img/raw/master/typora/20200722190442.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="20200722190442"></p><p>这样让你的Typora更加顺滑。</p></li></ul><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>到这儿我这两天在搭建中所碰见的问题和感悟都总结完了。从刚开始的什么都不知道，经过两天的摸索了解了许多。这是我的第一篇博客，亲手记录是发自内心的高兴。</p>]]></content>
      
      
      <categories>
          
          <category> Gridea </category>
          
          <category> 博客搭建 </category>
          
          <category> 环境部署 </category>
          
          <category> 写作工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Gitee </tag>
            
            <tag> Gridea </tag>
            
            <tag> Git </tag>
            
            <tag> node.js </tag>
            
            <tag> PicGo </tag>
            
            <tag> typora </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
